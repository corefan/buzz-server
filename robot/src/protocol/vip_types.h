/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef vip_TYPES_H
#define vip_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>



namespace entity {

struct VipType {
  enum type {
    INVALID = 0,
    VIP_1 = 1,
    VIP_2 = 2,
    VIP_3 = 3,
    MAX = 4
  };
};

extern const std::map<int, const char*> _VipType_VALUES_TO_NAMES;

struct VipPrivilegeType {
  enum type {
    MIN = 0,
    SOCIAL_HOMELAND_ODER = 0,
    SOCIAL_HOMELAND_JUMP_FIGHT = 1,
    SOCIAL_HOMELAND_HELP_WATERING = 2,
    SOCIAL_HOMELAND_FIGHT_NUM = 3,
    SOCIAL_HOMELAND_IMPRESS = 4,
    CHECKIN_AWARDS = 5,
    ATTR_ATTRIBUTE_UP = 6,
    SCENE_KILL_NPC_UP_EXP = 7,
    SCENE_MEDITATE_AWARD_UP = 8,
    SCENE_WORLD_JUMP_NUM = 9,
    CHECKIN_UP_NUM = 10,
    TRANSPORT_NUM = 11,
    DAILY_GIFT = 12,
    TASK_FREE_FLY = 13,
    DAILY_HONOUR = 14,
    MAZE_ACTION_POINT = 15,
    PLAYING_PERIOD_COUNT = 16,
    PLAYING_GROUP_AUTO = 17,
    PLAYING_PERIOD_PAID_AWARD_COUNT = 18,
    TRANSPORT_TASK_COUNT = 19,
    TRANSPORT_TASK_ROB_COUNT = 20,
    TRANSPORT_TASK_REFRESH_COUNT = 21,
    MAX = 22
  };
};

extern const std::map<int, const char*> _VipPrivilegeType_VALUES_TO_NAMES;

struct VipAdmitType {
  enum type {
    NO_ADMIT = 0,
    ADMIT = 1
  };
};

extern const std::map<int, const char*> _VipAdmitType_VALUES_TO_NAMES;

} // namespace

#endif
