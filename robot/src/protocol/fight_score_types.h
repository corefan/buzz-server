/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef fight_score_TYPES_H
#define fight_score_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>



namespace entity {

struct FightScoreType {
  enum type {
    MIN = 0,
    AXE = 1,
    SHOOT = 2,
    MAGIC = 3,
    MAX = 4
  };
};

extern const std::map<int, const char*> _FightScoreType_VALUES_TO_NAMES;

struct SubFightScoreType {
  enum type {
    MIN = 0,
    ACTOR_BASE = 0,
    SOUL = 1,
    SOUL_GROUP = 2,
    GUILD_SKILL = 3,
    GEM = 4,
    SPIRIT = 5,
    NOBLE = 6,
    ELEMENT = 7,
    SWORD = 8,
    LEGENDARY_WEAPON = 9,
    TASK_LAYER = 10,
    AXE_EQUIPMENT = 11,
    SHOOT_EQUIPMENT = 12,
    MAGIC_EQUIPMENT = 13,
    AXE_RUNE = 14,
    SHOOT_RUNE = 15,
    MAGIC_RUNE = 16,
    MAX = 17
  };
};

extern const std::map<int, const char*> _SubFightScoreType_VALUES_TO_NAMES;

} // namespace

#endif
