/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef resource_TYPES_H
#define resource_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>



namespace entity {

struct ResourceType {
  enum type {
    MIN = 0,
    ITEM = 1,
    RESOURCE = 2,
    MAX = 3
  };
};

extern const std::map<int, const char*> _ResourceType_VALUES_TO_NAMES;

struct ResourceID {
  enum type {
    MIN = 0,
    GOLD = 1,
    EXP = 2,
    RESTRICT_DOLLARS = 3,
    NIMBUS = 4,
    WAR_SOUL = 5,
    FREEDOM_DOLLARS = 6,
    GEM_SHARD = 7,
    HONOUR = 8,
    JUSTICE = 9,
    MIRACLE_INTEGRAL = 10,
    LEGEND_INTEGRAL = 11,
    ARENA_INTEGRAL = 12,
    GUILD_CONTRIBUTION = 13,
    MAX = 14
  };
};

extern const std::map<int, const char*> _ResourceID_VALUES_TO_NAMES;

} // namespace

#endif
