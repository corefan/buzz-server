/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef gateway_guild_protocol_TYPES_H
#define gateway_guild_protocol_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include "guild_types.h"
#include "gateway_protocol_types.h"


namespace gateway { namespace protocol {

struct GuildErrorCode {
  enum type {
    SUCCESS = 0,
    GUILD_NAME_EXIST = 1,
    GUILD_NAME_INVALID = 2,
    PENDING_MEMBER_FULL = 3,
    MEMBER_FULL = 4,
    TARGET_OFFLINE = 5,
    TARGET_GUILD_MODULE_DISABLED = 6,
    TARGET_ALREADY_IN_GUILD = 7,
    ERROR_UNKNOWN = 8
  };
};

extern const std::map<int, const char*> _GuildErrorCode_VALUES_TO_NAMES;

struct GuildPendingMemberOperateType {
  enum type {
    ADD = 0,
    REMOVE = 1,
    UPDATE = 2
  };
};

extern const std::map<int, const char*> _GuildPendingMemberOperateType_VALUES_TO_NAMES;

struct GuildMemberOperateType {
  enum type {
    ADD = 0,
    REMOVE = 1,
    UPDATE = 2
  };
};

extern const std::map<int, const char*> _GuildMemberOperateType_VALUES_TO_NAMES;

struct GuildEventOperateType {
  enum type {
    ADD = 0
  };
};

extern const std::map<int, const char*> _GuildEventOperateType_VALUES_TO_NAMES;

struct GuildSkillOperateType {
  enum type {
    ADD = 0,
    UPDATE = 1
  };
};

extern const std::map<int, const char*> _GuildSkillOperateType_VALUES_TO_NAMES;

struct GuildBuffOperateType {
  enum type {
    ADD = 0,
    CLEAR = 1
  };
};

extern const std::map<int, const char*> _GuildBuffOperateType_VALUES_TO_NAMES;

struct GuildListOperateType {
  enum type {
    ADD = 0,
    REMOVE = 1,
    UPDATE = 2
  };
};

extern const std::map<int, const char*> _GuildListOperateType_VALUES_TO_NAMES;


class GuildAoiData {
 public:

  static const char* ascii_fingerprint; // = "07A9615F837F7D0A952B595DD3020972";
  static const uint8_t binary_fingerprint[16]; // = {0x07,0xA9,0x61,0x5F,0x83,0x7F,0x7D,0x0A,0x95,0x2B,0x59,0x5D,0xD3,0x02,0x09,0x72};

  GuildAoiData() : actor_id_(), guild_name_() {
  }

  virtual ~GuildAoiData() throw() {}

  std::string actor_id_;
  std::string guild_name_;

  void __set_actor_id_(const std::string& val) {
    actor_id_ = val;
  }

  void __set_guild_name_(const std::string& val) {
    guild_name_ = val;
  }

  bool operator == (const GuildAoiData & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(guild_name_ == rhs.guild_name_))
      return false;
    return true;
  }
  bool operator != (const GuildAoiData &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const GuildAoiData & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(GuildAoiData &a, GuildAoiData &b);

typedef struct _GuildPendingMemberData__isset {
  _GuildPendingMemberData__isset() : actor_name_(false), online_(false), last_logout_time_(false), level_(false), map_(false) {}
  bool actor_name_;
  bool online_;
  bool last_logout_time_;
  bool level_;
  bool map_;
} _GuildPendingMemberData__isset;

class GuildPendingMemberData {
 public:

  static const char* ascii_fingerprint; // = "EF720E9FED0710433B3D5B55D1A223B6";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0x72,0x0E,0x9F,0xED,0x07,0x10,0x43,0x3B,0x3D,0x5B,0x55,0xD1,0xA2,0x23,0xB6};

  GuildPendingMemberData() : actor_id_(), actor_name_(), online_(0), last_logout_time_(), level_(0), map_(0) {
  }

  virtual ~GuildPendingMemberData() throw() {}

  std::string actor_id_;
  std::string actor_name_;
  bool online_;
  std::string last_logout_time_;
  int32_t level_;
  int16_t map_;

  _GuildPendingMemberData__isset __isset;

  void __set_actor_id_(const std::string& val) {
    actor_id_ = val;
  }

  void __set_actor_name_(const std::string& val) {
    actor_name_ = val;
    __isset.actor_name_ = true;
  }

  void __set_online_(const bool val) {
    online_ = val;
    __isset.online_ = true;
  }

  void __set_last_logout_time_(const std::string& val) {
    last_logout_time_ = val;
    __isset.last_logout_time_ = true;
  }

  void __set_level_(const int32_t val) {
    level_ = val;
    __isset.level_ = true;
  }

  void __set_map_(const int16_t val) {
    map_ = val;
    __isset.map_ = true;
  }

  bool operator == (const GuildPendingMemberData & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (__isset.actor_name_ != rhs.__isset.actor_name_)
      return false;
    else if (__isset.actor_name_ && !(actor_name_ == rhs.actor_name_))
      return false;
    if (__isset.online_ != rhs.__isset.online_)
      return false;
    else if (__isset.online_ && !(online_ == rhs.online_))
      return false;
    if (__isset.last_logout_time_ != rhs.__isset.last_logout_time_)
      return false;
    else if (__isset.last_logout_time_ && !(last_logout_time_ == rhs.last_logout_time_))
      return false;
    if (__isset.level_ != rhs.__isset.level_)
      return false;
    else if (__isset.level_ && !(level_ == rhs.level_))
      return false;
    if (__isset.map_ != rhs.__isset.map_)
      return false;
    else if (__isset.map_ && !(map_ == rhs.map_))
      return false;
    return true;
  }
  bool operator != (const GuildPendingMemberData &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const GuildPendingMemberData & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(GuildPendingMemberData &a, GuildPendingMemberData &b);

typedef struct _GuildMemberData__isset {
  _GuildMemberData__isset() : actor_name_(false), online_(false), last_logout_time_(false), level_(false), map_(false), guild_position_(false), total_contribution_value_(false), gold_contribution_(false), freedom_dollars_contribution_(false), light_crystal_contribution_(false), dark_crystal_contribution_(false), holy_crystal_contribution_(false), axe_fight_score_(false), shoot_fight_score_(false), magic_fight_score_(false) {}
  bool actor_name_;
  bool online_;
  bool last_logout_time_;
  bool level_;
  bool map_;
  bool guild_position_;
  bool total_contribution_value_;
  bool gold_contribution_;
  bool freedom_dollars_contribution_;
  bool light_crystal_contribution_;
  bool dark_crystal_contribution_;
  bool holy_crystal_contribution_;
  bool axe_fight_score_;
  bool shoot_fight_score_;
  bool magic_fight_score_;
} _GuildMemberData__isset;

class GuildMemberData {
 public:

  static const char* ascii_fingerprint; // = "58B29EAA45CA2DA86C6BC5F167CAEF60";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0xB2,0x9E,0xAA,0x45,0xCA,0x2D,0xA8,0x6C,0x6B,0xC5,0xF1,0x67,0xCA,0xEF,0x60};

  GuildMemberData() : actor_id_(), actor_name_(), online_(0), last_logout_time_(), level_(0), map_(0), guild_position_(0), total_contribution_value_(0), gold_contribution_(0), freedom_dollars_contribution_(0), light_crystal_contribution_(0), dark_crystal_contribution_(0), holy_crystal_contribution_(0), axe_fight_score_(0), shoot_fight_score_(0), magic_fight_score_(0) {
  }

  virtual ~GuildMemberData() throw() {}

  std::string actor_id_;
  std::string actor_name_;
  bool online_;
  std::string last_logout_time_;
  int32_t level_;
  int16_t map_;
  int32_t guild_position_;
  int32_t total_contribution_value_;
  int32_t gold_contribution_;
  int32_t freedom_dollars_contribution_;
  int32_t light_crystal_contribution_;
  int32_t dark_crystal_contribution_;
  int32_t holy_crystal_contribution_;
  int32_t axe_fight_score_;
  int32_t shoot_fight_score_;
  int32_t magic_fight_score_;

  _GuildMemberData__isset __isset;

  void __set_actor_id_(const std::string& val) {
    actor_id_ = val;
  }

  void __set_actor_name_(const std::string& val) {
    actor_name_ = val;
    __isset.actor_name_ = true;
  }

  void __set_online_(const bool val) {
    online_ = val;
    __isset.online_ = true;
  }

  void __set_last_logout_time_(const std::string& val) {
    last_logout_time_ = val;
    __isset.last_logout_time_ = true;
  }

  void __set_level_(const int32_t val) {
    level_ = val;
    __isset.level_ = true;
  }

  void __set_map_(const int16_t val) {
    map_ = val;
    __isset.map_ = true;
  }

  void __set_guild_position_(const int32_t val) {
    guild_position_ = val;
    __isset.guild_position_ = true;
  }

  void __set_total_contribution_value_(const int32_t val) {
    total_contribution_value_ = val;
    __isset.total_contribution_value_ = true;
  }

  void __set_gold_contribution_(const int32_t val) {
    gold_contribution_ = val;
    __isset.gold_contribution_ = true;
  }

  void __set_freedom_dollars_contribution_(const int32_t val) {
    freedom_dollars_contribution_ = val;
    __isset.freedom_dollars_contribution_ = true;
  }

  void __set_light_crystal_contribution_(const int32_t val) {
    light_crystal_contribution_ = val;
    __isset.light_crystal_contribution_ = true;
  }

  void __set_dark_crystal_contribution_(const int32_t val) {
    dark_crystal_contribution_ = val;
    __isset.dark_crystal_contribution_ = true;
  }

  void __set_holy_crystal_contribution_(const int32_t val) {
    holy_crystal_contribution_ = val;
    __isset.holy_crystal_contribution_ = true;
  }

  void __set_axe_fight_score_(const int32_t val) {
    axe_fight_score_ = val;
    __isset.axe_fight_score_ = true;
  }

  void __set_shoot_fight_score_(const int32_t val) {
    shoot_fight_score_ = val;
    __isset.shoot_fight_score_ = true;
  }

  void __set_magic_fight_score_(const int32_t val) {
    magic_fight_score_ = val;
    __isset.magic_fight_score_ = true;
  }

  bool operator == (const GuildMemberData & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (__isset.actor_name_ != rhs.__isset.actor_name_)
      return false;
    else if (__isset.actor_name_ && !(actor_name_ == rhs.actor_name_))
      return false;
    if (__isset.online_ != rhs.__isset.online_)
      return false;
    else if (__isset.online_ && !(online_ == rhs.online_))
      return false;
    if (__isset.last_logout_time_ != rhs.__isset.last_logout_time_)
      return false;
    else if (__isset.last_logout_time_ && !(last_logout_time_ == rhs.last_logout_time_))
      return false;
    if (__isset.level_ != rhs.__isset.level_)
      return false;
    else if (__isset.level_ && !(level_ == rhs.level_))
      return false;
    if (__isset.map_ != rhs.__isset.map_)
      return false;
    else if (__isset.map_ && !(map_ == rhs.map_))
      return false;
    if (__isset.guild_position_ != rhs.__isset.guild_position_)
      return false;
    else if (__isset.guild_position_ && !(guild_position_ == rhs.guild_position_))
      return false;
    if (__isset.total_contribution_value_ != rhs.__isset.total_contribution_value_)
      return false;
    else if (__isset.total_contribution_value_ && !(total_contribution_value_ == rhs.total_contribution_value_))
      return false;
    if (__isset.gold_contribution_ != rhs.__isset.gold_contribution_)
      return false;
    else if (__isset.gold_contribution_ && !(gold_contribution_ == rhs.gold_contribution_))
      return false;
    if (__isset.freedom_dollars_contribution_ != rhs.__isset.freedom_dollars_contribution_)
      return false;
    else if (__isset.freedom_dollars_contribution_ && !(freedom_dollars_contribution_ == rhs.freedom_dollars_contribution_))
      return false;
    if (__isset.light_crystal_contribution_ != rhs.__isset.light_crystal_contribution_)
      return false;
    else if (__isset.light_crystal_contribution_ && !(light_crystal_contribution_ == rhs.light_crystal_contribution_))
      return false;
    if (__isset.dark_crystal_contribution_ != rhs.__isset.dark_crystal_contribution_)
      return false;
    else if (__isset.dark_crystal_contribution_ && !(dark_crystal_contribution_ == rhs.dark_crystal_contribution_))
      return false;
    if (__isset.holy_crystal_contribution_ != rhs.__isset.holy_crystal_contribution_)
      return false;
    else if (__isset.holy_crystal_contribution_ && !(holy_crystal_contribution_ == rhs.holy_crystal_contribution_))
      return false;
    if (__isset.axe_fight_score_ != rhs.__isset.axe_fight_score_)
      return false;
    else if (__isset.axe_fight_score_ && !(axe_fight_score_ == rhs.axe_fight_score_))
      return false;
    if (__isset.shoot_fight_score_ != rhs.__isset.shoot_fight_score_)
      return false;
    else if (__isset.shoot_fight_score_ && !(shoot_fight_score_ == rhs.shoot_fight_score_))
      return false;
    if (__isset.magic_fight_score_ != rhs.__isset.magic_fight_score_)
      return false;
    else if (__isset.magic_fight_score_ && !(magic_fight_score_ == rhs.magic_fight_score_))
      return false;
    return true;
  }
  bool operator != (const GuildMemberData &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const GuildMemberData & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(GuildMemberData &a, GuildMemberData &b);


class GuildEventData {
 public:

  static const char* ascii_fingerprint; // = "D121591FCC85D0E17C727CA264A5F46D";
  static const uint8_t binary_fingerprint[16]; // = {0xD1,0x21,0x59,0x1F,0xCC,0x85,0xD0,0xE1,0x7C,0x72,0x7C,0xA2,0x64,0xA5,0xF4,0x6D};

  GuildEventData() : event_type_(( ::entity::GuildEventType::type)0), timestamp_() {
  }

  virtual ~GuildEventData() throw() {}

   ::entity::GuildEventType::type event_type_;
  std::string timestamp_;
  std::vector<std::string>  vars_;

  void __set_event_type_(const  ::entity::GuildEventType::type val) {
    event_type_ = val;
  }

  void __set_timestamp_(const std::string& val) {
    timestamp_ = val;
  }

  void __set_vars_(const std::vector<std::string> & val) {
    vars_ = val;
  }

  bool operator == (const GuildEventData & rhs) const
  {
    if (!(event_type_ == rhs.event_type_))
      return false;
    if (!(timestamp_ == rhs.timestamp_))
      return false;
    if (!(vars_ == rhs.vars_))
      return false;
    return true;
  }
  bool operator != (const GuildEventData &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const GuildEventData & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(GuildEventData &a, GuildEventData &b);

typedef struct _GuildSkillData__isset {
  _GuildSkillData__isset() : level_(false), effective_level_(false) {}
  bool level_;
  bool effective_level_;
} _GuildSkillData__isset;

class GuildSkillData {
 public:

  static const char* ascii_fingerprint; // = "78FEDFFD0F15205A6AA143E353A0D9B9";
  static const uint8_t binary_fingerprint[16]; // = {0x78,0xFE,0xDF,0xFD,0x0F,0x15,0x20,0x5A,0x6A,0xA1,0x43,0xE3,0x53,0xA0,0xD9,0xB9};

  GuildSkillData() : id_(0), level_(0), effective_level_(0) {
  }

  virtual ~GuildSkillData() throw() {}

  int32_t id_;
  int32_t level_;
  int32_t effective_level_;

  _GuildSkillData__isset __isset;

  void __set_id_(const int32_t val) {
    id_ = val;
  }

  void __set_level_(const int32_t val) {
    level_ = val;
    __isset.level_ = true;
  }

  void __set_effective_level_(const int32_t val) {
    effective_level_ = val;
    __isset.effective_level_ = true;
  }

  bool operator == (const GuildSkillData & rhs) const
  {
    if (!(id_ == rhs.id_))
      return false;
    if (__isset.level_ != rhs.__isset.level_)
      return false;
    else if (__isset.level_ && !(level_ == rhs.level_))
      return false;
    if (__isset.effective_level_ != rhs.__isset.effective_level_)
      return false;
    else if (__isset.effective_level_ && !(effective_level_ == rhs.effective_level_))
      return false;
    return true;
  }
  bool operator != (const GuildSkillData &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const GuildSkillData & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(GuildSkillData &a, GuildSkillData &b);

typedef struct _GuildListData__isset {
  _GuildListData__isset() : guild_name_(false), guild_level_(false), member_num_(false), leader_actor_id_(false), leader_actor_name_(false), leader_online_(false), total_fight_score_(false), suppress_join_(false), joined_(false) {}
  bool guild_name_;
  bool guild_level_;
  bool member_num_;
  bool leader_actor_id_;
  bool leader_actor_name_;
  bool leader_online_;
  bool total_fight_score_;
  bool suppress_join_;
  bool joined_;
} _GuildListData__isset;

class GuildListData {
 public:

  static const char* ascii_fingerprint; // = "2085C8AC127F65FD7F35304D221F21B4";
  static const uint8_t binary_fingerprint[16]; // = {0x20,0x85,0xC8,0xAC,0x12,0x7F,0x65,0xFD,0x7F,0x35,0x30,0x4D,0x22,0x1F,0x21,0xB4};

  GuildListData() : guild_id_(), guild_name_(), guild_level_(0), member_num_(0), leader_actor_id_(), leader_actor_name_(), leader_online_(0), total_fight_score_(), suppress_join_(0), joined_(0) {
  }

  virtual ~GuildListData() throw() {}

  std::string guild_id_;
  std::string guild_name_;
  int32_t guild_level_;
  int32_t member_num_;
  std::string leader_actor_id_;
  std::string leader_actor_name_;
  bool leader_online_;
  std::string total_fight_score_;
  bool suppress_join_;
  bool joined_;

  _GuildListData__isset __isset;

  void __set_guild_id_(const std::string& val) {
    guild_id_ = val;
  }

  void __set_guild_name_(const std::string& val) {
    guild_name_ = val;
    __isset.guild_name_ = true;
  }

  void __set_guild_level_(const int32_t val) {
    guild_level_ = val;
    __isset.guild_level_ = true;
  }

  void __set_member_num_(const int32_t val) {
    member_num_ = val;
    __isset.member_num_ = true;
  }

  void __set_leader_actor_id_(const std::string& val) {
    leader_actor_id_ = val;
    __isset.leader_actor_id_ = true;
  }

  void __set_leader_actor_name_(const std::string& val) {
    leader_actor_name_ = val;
    __isset.leader_actor_name_ = true;
  }

  void __set_leader_online_(const bool val) {
    leader_online_ = val;
    __isset.leader_online_ = true;
  }

  void __set_total_fight_score_(const std::string& val) {
    total_fight_score_ = val;
    __isset.total_fight_score_ = true;
  }

  void __set_suppress_join_(const bool val) {
    suppress_join_ = val;
    __isset.suppress_join_ = true;
  }

  void __set_joined_(const bool val) {
    joined_ = val;
    __isset.joined_ = true;
  }

  bool operator == (const GuildListData & rhs) const
  {
    if (!(guild_id_ == rhs.guild_id_))
      return false;
    if (__isset.guild_name_ != rhs.__isset.guild_name_)
      return false;
    else if (__isset.guild_name_ && !(guild_name_ == rhs.guild_name_))
      return false;
    if (__isset.guild_level_ != rhs.__isset.guild_level_)
      return false;
    else if (__isset.guild_level_ && !(guild_level_ == rhs.guild_level_))
      return false;
    if (__isset.member_num_ != rhs.__isset.member_num_)
      return false;
    else if (__isset.member_num_ && !(member_num_ == rhs.member_num_))
      return false;
    if (__isset.leader_actor_id_ != rhs.__isset.leader_actor_id_)
      return false;
    else if (__isset.leader_actor_id_ && !(leader_actor_id_ == rhs.leader_actor_id_))
      return false;
    if (__isset.leader_actor_name_ != rhs.__isset.leader_actor_name_)
      return false;
    else if (__isset.leader_actor_name_ && !(leader_actor_name_ == rhs.leader_actor_name_))
      return false;
    if (__isset.leader_online_ != rhs.__isset.leader_online_)
      return false;
    else if (__isset.leader_online_ && !(leader_online_ == rhs.leader_online_))
      return false;
    if (__isset.total_fight_score_ != rhs.__isset.total_fight_score_)
      return false;
    else if (__isset.total_fight_score_ && !(total_fight_score_ == rhs.total_fight_score_))
      return false;
    if (__isset.suppress_join_ != rhs.__isset.suppress_join_)
      return false;
    else if (__isset.suppress_join_ && !(suppress_join_ == rhs.suppress_join_))
      return false;
    if (__isset.joined_ != rhs.__isset.joined_)
      return false;
    else if (__isset.joined_ && !(joined_ == rhs.joined_))
      return false;
    return true;
  }
  bool operator != (const GuildListData &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const GuildListData & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(GuildListData &a, GuildListData &b);


class MessageGuildAoiSynchronize {
 public:

  static const char* ascii_fingerprint; // = "006EFB9C0A4E436459CDFDF617590BB4";
  static const uint8_t binary_fingerprint[16]; // = {0x00,0x6E,0xFB,0x9C,0x0A,0x4E,0x43,0x64,0x59,0xCD,0xFD,0xF6,0x17,0x59,0x0B,0xB4};

  MessageGuildAoiSynchronize() {
  }

  virtual ~MessageGuildAoiSynchronize() throw() {}

  std::vector<GuildAoiData>  aoi_data_;

  void __set_aoi_data_(const std::vector<GuildAoiData> & val) {
    aoi_data_ = val;
  }

  bool operator == (const MessageGuildAoiSynchronize & rhs) const
  {
    if (!(aoi_data_ == rhs.aoi_data_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildAoiSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildAoiSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildAoiSynchronize &a, MessageGuildAoiSynchronize &b);

typedef struct _MessageGuildInitialize__isset {
  _MessageGuildInitialize__isset() : guild_name_(false), guild_logo_(false), guild_level_(false), guild_announcement_(false), guild_gold_(false), guild_light_crystal_(false), guild_dark_crystal_(false), guild_holy_crystal_(false), guild_light_attribute_(false), guild_dark_attribute_(false), guild_holy_attribute_(false), guild_shop_level_(false), guild_college_level_(false), guild_barrack_level_(false), suppress_join_(false), pending_members_(false), members_(false), events_(false), current_contribution_value_(false), guild_skills_(false), guild_buffs_(false), current_playing_id_(false), current_playing_template_id_(false), opened_playing_groups_(false), finished_playings_(false), awarded_playings_(false) {}
  bool guild_name_;
  bool guild_logo_;
  bool guild_level_;
  bool guild_announcement_;
  bool guild_gold_;
  bool guild_light_crystal_;
  bool guild_dark_crystal_;
  bool guild_holy_crystal_;
  bool guild_light_attribute_;
  bool guild_dark_attribute_;
  bool guild_holy_attribute_;
  bool guild_shop_level_;
  bool guild_college_level_;
  bool guild_barrack_level_;
  bool suppress_join_;
  bool pending_members_;
  bool members_;
  bool events_;
  bool current_contribution_value_;
  bool guild_skills_;
  bool guild_buffs_;
  bool current_playing_id_;
  bool current_playing_template_id_;
  bool opened_playing_groups_;
  bool finished_playings_;
  bool awarded_playings_;
} _MessageGuildInitialize__isset;

class MessageGuildInitialize {
 public:

  static const char* ascii_fingerprint; // = "92D741A0180B5403DEFFAC78404D2DF1";
  static const uint8_t binary_fingerprint[16]; // = {0x92,0xD7,0x41,0xA0,0x18,0x0B,0x54,0x03,0xDE,0xFF,0xAC,0x78,0x40,0x4D,0x2D,0xF1};

  MessageGuildInitialize() : guild_id_(), guild_name_(), guild_logo_(0), guild_level_(0), guild_announcement_(), guild_gold_(0), guild_light_crystal_(0), guild_dark_crystal_(0), guild_holy_crystal_(0), guild_light_attribute_(0), guild_dark_attribute_(0), guild_holy_attribute_(0), guild_shop_level_(0), guild_college_level_(0), guild_barrack_level_(0), suppress_join_(0), current_contribution_value_(0), current_playing_id_(), current_playing_template_id_(0) {
  }

  virtual ~MessageGuildInitialize() throw() {}

  std::string guild_id_;
  std::string guild_name_;
  int32_t guild_logo_;
  int32_t guild_level_;
  std::string guild_announcement_;
  int32_t guild_gold_;
  int32_t guild_light_crystal_;
  int32_t guild_dark_crystal_;
  int32_t guild_holy_crystal_;
  int32_t guild_light_attribute_;
  int32_t guild_dark_attribute_;
  int32_t guild_holy_attribute_;
  int32_t guild_shop_level_;
  int32_t guild_college_level_;
  int32_t guild_barrack_level_;
  bool suppress_join_;
  std::vector<GuildPendingMemberData>  pending_members_;
  std::vector<GuildMemberData>  members_;
  std::vector<GuildEventData>  events_;
  int32_t current_contribution_value_;
  std::vector<GuildSkillData>  guild_skills_;
  std::vector<int32_t>  guild_buffs_;
  std::string current_playing_id_;
  int32_t current_playing_template_id_;
  std::vector<int32_t>  opened_playing_groups_;
  std::vector<int32_t>  finished_playings_;
  std::vector<int32_t>  awarded_playings_;

  _MessageGuildInitialize__isset __isset;

  void __set_guild_id_(const std::string& val) {
    guild_id_ = val;
  }

  void __set_guild_name_(const std::string& val) {
    guild_name_ = val;
    __isset.guild_name_ = true;
  }

  void __set_guild_logo_(const int32_t val) {
    guild_logo_ = val;
    __isset.guild_logo_ = true;
  }

  void __set_guild_level_(const int32_t val) {
    guild_level_ = val;
    __isset.guild_level_ = true;
  }

  void __set_guild_announcement_(const std::string& val) {
    guild_announcement_ = val;
    __isset.guild_announcement_ = true;
  }

  void __set_guild_gold_(const int32_t val) {
    guild_gold_ = val;
    __isset.guild_gold_ = true;
  }

  void __set_guild_light_crystal_(const int32_t val) {
    guild_light_crystal_ = val;
    __isset.guild_light_crystal_ = true;
  }

  void __set_guild_dark_crystal_(const int32_t val) {
    guild_dark_crystal_ = val;
    __isset.guild_dark_crystal_ = true;
  }

  void __set_guild_holy_crystal_(const int32_t val) {
    guild_holy_crystal_ = val;
    __isset.guild_holy_crystal_ = true;
  }

  void __set_guild_light_attribute_(const int32_t val) {
    guild_light_attribute_ = val;
    __isset.guild_light_attribute_ = true;
  }

  void __set_guild_dark_attribute_(const int32_t val) {
    guild_dark_attribute_ = val;
    __isset.guild_dark_attribute_ = true;
  }

  void __set_guild_holy_attribute_(const int32_t val) {
    guild_holy_attribute_ = val;
    __isset.guild_holy_attribute_ = true;
  }

  void __set_guild_shop_level_(const int32_t val) {
    guild_shop_level_ = val;
    __isset.guild_shop_level_ = true;
  }

  void __set_guild_college_level_(const int32_t val) {
    guild_college_level_ = val;
    __isset.guild_college_level_ = true;
  }

  void __set_guild_barrack_level_(const int32_t val) {
    guild_barrack_level_ = val;
    __isset.guild_barrack_level_ = true;
  }

  void __set_suppress_join_(const bool val) {
    suppress_join_ = val;
    __isset.suppress_join_ = true;
  }

  void __set_pending_members_(const std::vector<GuildPendingMemberData> & val) {
    pending_members_ = val;
    __isset.pending_members_ = true;
  }

  void __set_members_(const std::vector<GuildMemberData> & val) {
    members_ = val;
    __isset.members_ = true;
  }

  void __set_events_(const std::vector<GuildEventData> & val) {
    events_ = val;
    __isset.events_ = true;
  }

  void __set_current_contribution_value_(const int32_t val) {
    current_contribution_value_ = val;
    __isset.current_contribution_value_ = true;
  }

  void __set_guild_skills_(const std::vector<GuildSkillData> & val) {
    guild_skills_ = val;
    __isset.guild_skills_ = true;
  }

  void __set_guild_buffs_(const std::vector<int32_t> & val) {
    guild_buffs_ = val;
    __isset.guild_buffs_ = true;
  }

  void __set_current_playing_id_(const std::string& val) {
    current_playing_id_ = val;
    __isset.current_playing_id_ = true;
  }

  void __set_current_playing_template_id_(const int32_t val) {
    current_playing_template_id_ = val;
    __isset.current_playing_template_id_ = true;
  }

  void __set_opened_playing_groups_(const std::vector<int32_t> & val) {
    opened_playing_groups_ = val;
    __isset.opened_playing_groups_ = true;
  }

  void __set_finished_playings_(const std::vector<int32_t> & val) {
    finished_playings_ = val;
    __isset.finished_playings_ = true;
  }

  void __set_awarded_playings_(const std::vector<int32_t> & val) {
    awarded_playings_ = val;
    __isset.awarded_playings_ = true;
  }

  bool operator == (const MessageGuildInitialize & rhs) const
  {
    if (!(guild_id_ == rhs.guild_id_))
      return false;
    if (__isset.guild_name_ != rhs.__isset.guild_name_)
      return false;
    else if (__isset.guild_name_ && !(guild_name_ == rhs.guild_name_))
      return false;
    if (__isset.guild_logo_ != rhs.__isset.guild_logo_)
      return false;
    else if (__isset.guild_logo_ && !(guild_logo_ == rhs.guild_logo_))
      return false;
    if (__isset.guild_level_ != rhs.__isset.guild_level_)
      return false;
    else if (__isset.guild_level_ && !(guild_level_ == rhs.guild_level_))
      return false;
    if (__isset.guild_announcement_ != rhs.__isset.guild_announcement_)
      return false;
    else if (__isset.guild_announcement_ && !(guild_announcement_ == rhs.guild_announcement_))
      return false;
    if (__isset.guild_gold_ != rhs.__isset.guild_gold_)
      return false;
    else if (__isset.guild_gold_ && !(guild_gold_ == rhs.guild_gold_))
      return false;
    if (__isset.guild_light_crystal_ != rhs.__isset.guild_light_crystal_)
      return false;
    else if (__isset.guild_light_crystal_ && !(guild_light_crystal_ == rhs.guild_light_crystal_))
      return false;
    if (__isset.guild_dark_crystal_ != rhs.__isset.guild_dark_crystal_)
      return false;
    else if (__isset.guild_dark_crystal_ && !(guild_dark_crystal_ == rhs.guild_dark_crystal_))
      return false;
    if (__isset.guild_holy_crystal_ != rhs.__isset.guild_holy_crystal_)
      return false;
    else if (__isset.guild_holy_crystal_ && !(guild_holy_crystal_ == rhs.guild_holy_crystal_))
      return false;
    if (__isset.guild_light_attribute_ != rhs.__isset.guild_light_attribute_)
      return false;
    else if (__isset.guild_light_attribute_ && !(guild_light_attribute_ == rhs.guild_light_attribute_))
      return false;
    if (__isset.guild_dark_attribute_ != rhs.__isset.guild_dark_attribute_)
      return false;
    else if (__isset.guild_dark_attribute_ && !(guild_dark_attribute_ == rhs.guild_dark_attribute_))
      return false;
    if (__isset.guild_holy_attribute_ != rhs.__isset.guild_holy_attribute_)
      return false;
    else if (__isset.guild_holy_attribute_ && !(guild_holy_attribute_ == rhs.guild_holy_attribute_))
      return false;
    if (__isset.guild_shop_level_ != rhs.__isset.guild_shop_level_)
      return false;
    else if (__isset.guild_shop_level_ && !(guild_shop_level_ == rhs.guild_shop_level_))
      return false;
    if (__isset.guild_college_level_ != rhs.__isset.guild_college_level_)
      return false;
    else if (__isset.guild_college_level_ && !(guild_college_level_ == rhs.guild_college_level_))
      return false;
    if (__isset.guild_barrack_level_ != rhs.__isset.guild_barrack_level_)
      return false;
    else if (__isset.guild_barrack_level_ && !(guild_barrack_level_ == rhs.guild_barrack_level_))
      return false;
    if (__isset.suppress_join_ != rhs.__isset.suppress_join_)
      return false;
    else if (__isset.suppress_join_ && !(suppress_join_ == rhs.suppress_join_))
      return false;
    if (__isset.pending_members_ != rhs.__isset.pending_members_)
      return false;
    else if (__isset.pending_members_ && !(pending_members_ == rhs.pending_members_))
      return false;
    if (__isset.members_ != rhs.__isset.members_)
      return false;
    else if (__isset.members_ && !(members_ == rhs.members_))
      return false;
    if (__isset.events_ != rhs.__isset.events_)
      return false;
    else if (__isset.events_ && !(events_ == rhs.events_))
      return false;
    if (__isset.current_contribution_value_ != rhs.__isset.current_contribution_value_)
      return false;
    else if (__isset.current_contribution_value_ && !(current_contribution_value_ == rhs.current_contribution_value_))
      return false;
    if (__isset.guild_skills_ != rhs.__isset.guild_skills_)
      return false;
    else if (__isset.guild_skills_ && !(guild_skills_ == rhs.guild_skills_))
      return false;
    if (__isset.guild_buffs_ != rhs.__isset.guild_buffs_)
      return false;
    else if (__isset.guild_buffs_ && !(guild_buffs_ == rhs.guild_buffs_))
      return false;
    if (__isset.current_playing_id_ != rhs.__isset.current_playing_id_)
      return false;
    else if (__isset.current_playing_id_ && !(current_playing_id_ == rhs.current_playing_id_))
      return false;
    if (__isset.current_playing_template_id_ != rhs.__isset.current_playing_template_id_)
      return false;
    else if (__isset.current_playing_template_id_ && !(current_playing_template_id_ == rhs.current_playing_template_id_))
      return false;
    if (__isset.opened_playing_groups_ != rhs.__isset.opened_playing_groups_)
      return false;
    else if (__isset.opened_playing_groups_ && !(opened_playing_groups_ == rhs.opened_playing_groups_))
      return false;
    if (__isset.finished_playings_ != rhs.__isset.finished_playings_)
      return false;
    else if (__isset.finished_playings_ && !(finished_playings_ == rhs.finished_playings_))
      return false;
    if (__isset.awarded_playings_ != rhs.__isset.awarded_playings_)
      return false;
    else if (__isset.awarded_playings_ && !(awarded_playings_ == rhs.awarded_playings_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildInitialize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildInitialize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildInitialize &a, MessageGuildInitialize &b);

typedef struct _MessageGuildSynchronize__isset {
  _MessageGuildSynchronize__isset() : guild_level_(false), guild_announcement_(false), guild_gold_(false), guild_light_crystal_(false), guild_dark_crystal_(false), guild_holy_crystal_(false), guild_light_attribute_(false), guild_dark_attribute_(false), guild_holy_attribute_(false), guild_shop_level_(false), guild_college_level_(false), guild_barrack_level_(false), suppress_join_(false), current_contribution_value_(false), current_playing_id_(false), current_playing_template_id_(false) {}
  bool guild_level_;
  bool guild_announcement_;
  bool guild_gold_;
  bool guild_light_crystal_;
  bool guild_dark_crystal_;
  bool guild_holy_crystal_;
  bool guild_light_attribute_;
  bool guild_dark_attribute_;
  bool guild_holy_attribute_;
  bool guild_shop_level_;
  bool guild_college_level_;
  bool guild_barrack_level_;
  bool suppress_join_;
  bool current_contribution_value_;
  bool current_playing_id_;
  bool current_playing_template_id_;
} _MessageGuildSynchronize__isset;

class MessageGuildSynchronize {
 public:

  static const char* ascii_fingerprint; // = "AE1A36B29CB467995C6C79AF99FB4CA9";
  static const uint8_t binary_fingerprint[16]; // = {0xAE,0x1A,0x36,0xB2,0x9C,0xB4,0x67,0x99,0x5C,0x6C,0x79,0xAF,0x99,0xFB,0x4C,0xA9};

  MessageGuildSynchronize() : guild_level_(0), guild_announcement_(), guild_gold_(0), guild_light_crystal_(0), guild_dark_crystal_(0), guild_holy_crystal_(0), guild_light_attribute_(0), guild_dark_attribute_(0), guild_holy_attribute_(0), guild_shop_level_(0), guild_college_level_(0), guild_barrack_level_(0), suppress_join_(0), current_contribution_value_(0), current_playing_id_(), current_playing_template_id_(0) {
  }

  virtual ~MessageGuildSynchronize() throw() {}

  int32_t guild_level_;
  std::string guild_announcement_;
  int32_t guild_gold_;
  int32_t guild_light_crystal_;
  int32_t guild_dark_crystal_;
  int32_t guild_holy_crystal_;
  int32_t guild_light_attribute_;
  int32_t guild_dark_attribute_;
  int32_t guild_holy_attribute_;
  int32_t guild_shop_level_;
  int32_t guild_college_level_;
  int32_t guild_barrack_level_;
  bool suppress_join_;
  int32_t current_contribution_value_;
  std::string current_playing_id_;
  int32_t current_playing_template_id_;

  _MessageGuildSynchronize__isset __isset;

  void __set_guild_level_(const int32_t val) {
    guild_level_ = val;
    __isset.guild_level_ = true;
  }

  void __set_guild_announcement_(const std::string& val) {
    guild_announcement_ = val;
    __isset.guild_announcement_ = true;
  }

  void __set_guild_gold_(const int32_t val) {
    guild_gold_ = val;
    __isset.guild_gold_ = true;
  }

  void __set_guild_light_crystal_(const int32_t val) {
    guild_light_crystal_ = val;
    __isset.guild_light_crystal_ = true;
  }

  void __set_guild_dark_crystal_(const int32_t val) {
    guild_dark_crystal_ = val;
    __isset.guild_dark_crystal_ = true;
  }

  void __set_guild_holy_crystal_(const int32_t val) {
    guild_holy_crystal_ = val;
    __isset.guild_holy_crystal_ = true;
  }

  void __set_guild_light_attribute_(const int32_t val) {
    guild_light_attribute_ = val;
    __isset.guild_light_attribute_ = true;
  }

  void __set_guild_dark_attribute_(const int32_t val) {
    guild_dark_attribute_ = val;
    __isset.guild_dark_attribute_ = true;
  }

  void __set_guild_holy_attribute_(const int32_t val) {
    guild_holy_attribute_ = val;
    __isset.guild_holy_attribute_ = true;
  }

  void __set_guild_shop_level_(const int32_t val) {
    guild_shop_level_ = val;
    __isset.guild_shop_level_ = true;
  }

  void __set_guild_college_level_(const int32_t val) {
    guild_college_level_ = val;
    __isset.guild_college_level_ = true;
  }

  void __set_guild_barrack_level_(const int32_t val) {
    guild_barrack_level_ = val;
    __isset.guild_barrack_level_ = true;
  }

  void __set_suppress_join_(const bool val) {
    suppress_join_ = val;
    __isset.suppress_join_ = true;
  }

  void __set_current_contribution_value_(const int32_t val) {
    current_contribution_value_ = val;
    __isset.current_contribution_value_ = true;
  }

  void __set_current_playing_id_(const std::string& val) {
    current_playing_id_ = val;
    __isset.current_playing_id_ = true;
  }

  void __set_current_playing_template_id_(const int32_t val) {
    current_playing_template_id_ = val;
    __isset.current_playing_template_id_ = true;
  }

  bool operator == (const MessageGuildSynchronize & rhs) const
  {
    if (__isset.guild_level_ != rhs.__isset.guild_level_)
      return false;
    else if (__isset.guild_level_ && !(guild_level_ == rhs.guild_level_))
      return false;
    if (__isset.guild_announcement_ != rhs.__isset.guild_announcement_)
      return false;
    else if (__isset.guild_announcement_ && !(guild_announcement_ == rhs.guild_announcement_))
      return false;
    if (__isset.guild_gold_ != rhs.__isset.guild_gold_)
      return false;
    else if (__isset.guild_gold_ && !(guild_gold_ == rhs.guild_gold_))
      return false;
    if (__isset.guild_light_crystal_ != rhs.__isset.guild_light_crystal_)
      return false;
    else if (__isset.guild_light_crystal_ && !(guild_light_crystal_ == rhs.guild_light_crystal_))
      return false;
    if (__isset.guild_dark_crystal_ != rhs.__isset.guild_dark_crystal_)
      return false;
    else if (__isset.guild_dark_crystal_ && !(guild_dark_crystal_ == rhs.guild_dark_crystal_))
      return false;
    if (__isset.guild_holy_crystal_ != rhs.__isset.guild_holy_crystal_)
      return false;
    else if (__isset.guild_holy_crystal_ && !(guild_holy_crystal_ == rhs.guild_holy_crystal_))
      return false;
    if (__isset.guild_light_attribute_ != rhs.__isset.guild_light_attribute_)
      return false;
    else if (__isset.guild_light_attribute_ && !(guild_light_attribute_ == rhs.guild_light_attribute_))
      return false;
    if (__isset.guild_dark_attribute_ != rhs.__isset.guild_dark_attribute_)
      return false;
    else if (__isset.guild_dark_attribute_ && !(guild_dark_attribute_ == rhs.guild_dark_attribute_))
      return false;
    if (__isset.guild_holy_attribute_ != rhs.__isset.guild_holy_attribute_)
      return false;
    else if (__isset.guild_holy_attribute_ && !(guild_holy_attribute_ == rhs.guild_holy_attribute_))
      return false;
    if (__isset.guild_shop_level_ != rhs.__isset.guild_shop_level_)
      return false;
    else if (__isset.guild_shop_level_ && !(guild_shop_level_ == rhs.guild_shop_level_))
      return false;
    if (__isset.guild_college_level_ != rhs.__isset.guild_college_level_)
      return false;
    else if (__isset.guild_college_level_ && !(guild_college_level_ == rhs.guild_college_level_))
      return false;
    if (__isset.guild_barrack_level_ != rhs.__isset.guild_barrack_level_)
      return false;
    else if (__isset.guild_barrack_level_ && !(guild_barrack_level_ == rhs.guild_barrack_level_))
      return false;
    if (__isset.suppress_join_ != rhs.__isset.suppress_join_)
      return false;
    else if (__isset.suppress_join_ && !(suppress_join_ == rhs.suppress_join_))
      return false;
    if (__isset.current_contribution_value_ != rhs.__isset.current_contribution_value_)
      return false;
    else if (__isset.current_contribution_value_ && !(current_contribution_value_ == rhs.current_contribution_value_))
      return false;
    if (__isset.current_playing_id_ != rhs.__isset.current_playing_id_)
      return false;
    else if (__isset.current_playing_id_ && !(current_playing_id_ == rhs.current_playing_id_))
      return false;
    if (__isset.current_playing_template_id_ != rhs.__isset.current_playing_template_id_)
      return false;
    else if (__isset.current_playing_template_id_ && !(current_playing_template_id_ == rhs.current_playing_template_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildSynchronize &a, MessageGuildSynchronize &b);


class MessageGuildPendingMemberSynchronize {
 public:

  static const char* ascii_fingerprint; // = "B54BACECA977B00DADB2219E8767FCF5";
  static const uint8_t binary_fingerprint[16]; // = {0xB5,0x4B,0xAC,0xEC,0xA9,0x77,0xB0,0x0D,0xAD,0xB2,0x21,0x9E,0x87,0x67,0xFC,0xF5};

  MessageGuildPendingMemberSynchronize() : type_((GuildPendingMemberOperateType::type)0) {
  }

  virtual ~MessageGuildPendingMemberSynchronize() throw() {}

  GuildPendingMemberOperateType::type type_;
  GuildPendingMemberData data_;

  void __set_type_(const GuildPendingMemberOperateType::type val) {
    type_ = val;
  }

  void __set_data_(const GuildPendingMemberData& val) {
    data_ = val;
  }

  bool operator == (const MessageGuildPendingMemberSynchronize & rhs) const
  {
    if (!(type_ == rhs.type_))
      return false;
    if (!(data_ == rhs.data_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildPendingMemberSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildPendingMemberSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildPendingMemberSynchronize &a, MessageGuildPendingMemberSynchronize &b);


class MessageGuildMemberSynchronize {
 public:

  static const char* ascii_fingerprint; // = "3623D7B0333169D1D27BB5180EC93D84";
  static const uint8_t binary_fingerprint[16]; // = {0x36,0x23,0xD7,0xB0,0x33,0x31,0x69,0xD1,0xD2,0x7B,0xB5,0x18,0x0E,0xC9,0x3D,0x84};

  MessageGuildMemberSynchronize() : type_((GuildMemberOperateType::type)0) {
  }

  virtual ~MessageGuildMemberSynchronize() throw() {}

  GuildMemberOperateType::type type_;
  GuildMemberData data_;

  void __set_type_(const GuildMemberOperateType::type val) {
    type_ = val;
  }

  void __set_data_(const GuildMemberData& val) {
    data_ = val;
  }

  bool operator == (const MessageGuildMemberSynchronize & rhs) const
  {
    if (!(type_ == rhs.type_))
      return false;
    if (!(data_ == rhs.data_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildMemberSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildMemberSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildMemberSynchronize &a, MessageGuildMemberSynchronize &b);


class MessageGuildEventSynchronize {
 public:

  static const char* ascii_fingerprint; // = "69CFAA92E04882F6EA54F81504CDEB9C";
  static const uint8_t binary_fingerprint[16]; // = {0x69,0xCF,0xAA,0x92,0xE0,0x48,0x82,0xF6,0xEA,0x54,0xF8,0x15,0x04,0xCD,0xEB,0x9C};

  MessageGuildEventSynchronize() : type_((GuildEventOperateType::type)0) {
  }

  virtual ~MessageGuildEventSynchronize() throw() {}

  GuildEventOperateType::type type_;
  GuildEventData data_;

  void __set_type_(const GuildEventOperateType::type val) {
    type_ = val;
  }

  void __set_data_(const GuildEventData& val) {
    data_ = val;
  }

  bool operator == (const MessageGuildEventSynchronize & rhs) const
  {
    if (!(type_ == rhs.type_))
      return false;
    if (!(data_ == rhs.data_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildEventSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildEventSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildEventSynchronize &a, MessageGuildEventSynchronize &b);


class MessageGuildSkillSynchronize {
 public:

  static const char* ascii_fingerprint; // = "756852F7097195E6CC24D5C5717D820B";
  static const uint8_t binary_fingerprint[16]; // = {0x75,0x68,0x52,0xF7,0x09,0x71,0x95,0xE6,0xCC,0x24,0xD5,0xC5,0x71,0x7D,0x82,0x0B};

  MessageGuildSkillSynchronize() : type_((GuildSkillOperateType::type)0) {
  }

  virtual ~MessageGuildSkillSynchronize() throw() {}

  GuildSkillOperateType::type type_;
  GuildSkillData data_;

  void __set_type_(const GuildSkillOperateType::type val) {
    type_ = val;
  }

  void __set_data_(const GuildSkillData& val) {
    data_ = val;
  }

  bool operator == (const MessageGuildSkillSynchronize & rhs) const
  {
    if (!(type_ == rhs.type_))
      return false;
    if (!(data_ == rhs.data_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildSkillSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildSkillSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildSkillSynchronize &a, MessageGuildSkillSynchronize &b);


class MessageGuildBuffSynchronize {
 public:

  static const char* ascii_fingerprint; // = "46A703A33337BED2F62F386FC66B2A5F";
  static const uint8_t binary_fingerprint[16]; // = {0x46,0xA7,0x03,0xA3,0x33,0x37,0xBE,0xD2,0xF6,0x2F,0x38,0x6F,0xC6,0x6B,0x2A,0x5F};

  MessageGuildBuffSynchronize() : type_((GuildBuffOperateType::type)0), guild_buff_id_(0) {
  }

  virtual ~MessageGuildBuffSynchronize() throw() {}

  GuildBuffOperateType::type type_;
  int32_t guild_buff_id_;

  void __set_type_(const GuildBuffOperateType::type val) {
    type_ = val;
  }

  void __set_guild_buff_id_(const int32_t val) {
    guild_buff_id_ = val;
  }

  bool operator == (const MessageGuildBuffSynchronize & rhs) const
  {
    if (!(type_ == rhs.type_))
      return false;
    if (!(guild_buff_id_ == rhs.guild_buff_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildBuffSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildBuffSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildBuffSynchronize &a, MessageGuildBuffSynchronize &b);


class MessageGuildListRequest {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildListRequest() {
  }

  virtual ~MessageGuildListRequest() throw() {}


  bool operator == (const MessageGuildListRequest & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildListRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildListRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildListRequest &a, MessageGuildListRequest &b);

typedef struct _MessageGuildListResponse__isset {
  _MessageGuildListResponse__isset() : guilds_(false) {}
  bool guilds_;
} _MessageGuildListResponse__isset;

class MessageGuildListResponse {
 public:

  static const char* ascii_fingerprint; // = "532A893BD08AD0F0B6B3E11A8E9254EF";
  static const uint8_t binary_fingerprint[16]; // = {0x53,0x2A,0x89,0x3B,0xD0,0x8A,0xD0,0xF0,0xB6,0xB3,0xE1,0x1A,0x8E,0x92,0x54,0xEF};

  MessageGuildListResponse() : result_(0) {
  }

  virtual ~MessageGuildListResponse() throw() {}

  bool result_;
  std::vector<GuildListData>  guilds_;

  _MessageGuildListResponse__isset __isset;

  void __set_result_(const bool val) {
    result_ = val;
  }

  void __set_guilds_(const std::vector<GuildListData> & val) {
    guilds_ = val;
    __isset.guilds_ = true;
  }

  bool operator == (const MessageGuildListResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    if (__isset.guilds_ != rhs.__isset.guilds_)
      return false;
    else if (__isset.guilds_ && !(guilds_ == rhs.guilds_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildListResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildListResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildListResponse &a, MessageGuildListResponse &b);


class MessageGuildListSynchronize {
 public:

  static const char* ascii_fingerprint; // = "32087E370CE0F994EF6EF3921FBE1370";
  static const uint8_t binary_fingerprint[16]; // = {0x32,0x08,0x7E,0x37,0x0C,0xE0,0xF9,0x94,0xEF,0x6E,0xF3,0x92,0x1F,0xBE,0x13,0x70};

  MessageGuildListSynchronize() : type_((GuildListOperateType::type)0) {
  }

  virtual ~MessageGuildListSynchronize() throw() {}

  GuildListOperateType::type type_;
  GuildListData data_;

  void __set_type_(const GuildListOperateType::type val) {
    type_ = val;
  }

  void __set_data_(const GuildListData& val) {
    data_ = val;
  }

  bool operator == (const MessageGuildListSynchronize & rhs) const
  {
    if (!(type_ == rhs.type_))
      return false;
    if (!(data_ == rhs.data_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildListSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildListSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildListSynchronize &a, MessageGuildListSynchronize &b);


class MessageGuildCreateRequest {
 public:

  static const char* ascii_fingerprint; // = "EEBC915CE44901401D881E6091423036";
  static const uint8_t binary_fingerprint[16]; // = {0xEE,0xBC,0x91,0x5C,0xE4,0x49,0x01,0x40,0x1D,0x88,0x1E,0x60,0x91,0x42,0x30,0x36};

  MessageGuildCreateRequest() : guild_name_(), guild_logo_(0) {
  }

  virtual ~MessageGuildCreateRequest() throw() {}

  std::string guild_name_;
  int32_t guild_logo_;

  void __set_guild_name_(const std::string& val) {
    guild_name_ = val;
  }

  void __set_guild_logo_(const int32_t val) {
    guild_logo_ = val;
  }

  bool operator == (const MessageGuildCreateRequest & rhs) const
  {
    if (!(guild_name_ == rhs.guild_name_))
      return false;
    if (!(guild_logo_ == rhs.guild_logo_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildCreateRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildCreateRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildCreateRequest &a, MessageGuildCreateRequest &b);


class MessageGuildCreateResponse {
 public:

  static const char* ascii_fingerprint; // = "8BBB3D0C3B370CB38F2D1340BB79F0AA";
  static const uint8_t binary_fingerprint[16]; // = {0x8B,0xBB,0x3D,0x0C,0x3B,0x37,0x0C,0xB3,0x8F,0x2D,0x13,0x40,0xBB,0x79,0xF0,0xAA};

  MessageGuildCreateResponse() : result_((GuildErrorCode::type)0) {
  }

  virtual ~MessageGuildCreateResponse() throw() {}

  GuildErrorCode::type result_;

  void __set_result_(const GuildErrorCode::type val) {
    result_ = val;
  }

  bool operator == (const MessageGuildCreateResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildCreateResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildCreateResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildCreateResponse &a, MessageGuildCreateResponse &b);


class MessageGuildDismissNotify {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildDismissNotify() {
  }

  virtual ~MessageGuildDismissNotify() throw() {}


  bool operator == (const MessageGuildDismissNotify & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildDismissNotify &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildDismissNotify & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildDismissNotify &a, MessageGuildDismissNotify &b);


class MessageGuildSuppressJoinRequest {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildSuppressJoinRequest() : suppress_join_(0) {
  }

  virtual ~MessageGuildSuppressJoinRequest() throw() {}

  bool suppress_join_;

  void __set_suppress_join_(const bool val) {
    suppress_join_ = val;
  }

  bool operator == (const MessageGuildSuppressJoinRequest & rhs) const
  {
    if (!(suppress_join_ == rhs.suppress_join_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildSuppressJoinRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildSuppressJoinRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildSuppressJoinRequest &a, MessageGuildSuppressJoinRequest &b);


class MessageGuildSuppressJoinResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildSuppressJoinResponse() : result_(0) {
  }

  virtual ~MessageGuildSuppressJoinResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildSuppressJoinResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildSuppressJoinResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildSuppressJoinResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildSuppressJoinResponse &a, MessageGuildSuppressJoinResponse &b);


class MessageGuildJoinRequest {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  MessageGuildJoinRequest() : guild_id_() {
  }

  virtual ~MessageGuildJoinRequest() throw() {}

  std::string guild_id_;

  void __set_guild_id_(const std::string& val) {
    guild_id_ = val;
  }

  bool operator == (const MessageGuildJoinRequest & rhs) const
  {
    if (!(guild_id_ == rhs.guild_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildJoinRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildJoinRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildJoinRequest &a, MessageGuildJoinRequest &b);


class MessageGuildJoinResponse {
 public:

  static const char* ascii_fingerprint; // = "8BBB3D0C3B370CB38F2D1340BB79F0AA";
  static const uint8_t binary_fingerprint[16]; // = {0x8B,0xBB,0x3D,0x0C,0x3B,0x37,0x0C,0xB3,0x8F,0x2D,0x13,0x40,0xBB,0x79,0xF0,0xAA};

  MessageGuildJoinResponse() : result_((GuildErrorCode::type)0) {
  }

  virtual ~MessageGuildJoinResponse() throw() {}

  GuildErrorCode::type result_;

  void __set_result_(const GuildErrorCode::type val) {
    result_ = val;
  }

  bool operator == (const MessageGuildJoinResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildJoinResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildJoinResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildJoinResponse &a, MessageGuildJoinResponse &b);


class MessageGuildCancelJoinRequest {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  MessageGuildCancelJoinRequest() : guild_id_() {
  }

  virtual ~MessageGuildCancelJoinRequest() throw() {}

  std::string guild_id_;

  void __set_guild_id_(const std::string& val) {
    guild_id_ = val;
  }

  bool operator == (const MessageGuildCancelJoinRequest & rhs) const
  {
    if (!(guild_id_ == rhs.guild_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildCancelJoinRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildCancelJoinRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildCancelJoinRequest &a, MessageGuildCancelJoinRequest &b);


class MessageGuildCancelJoinResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildCancelJoinResponse() : result_(0) {
  }

  virtual ~MessageGuildCancelJoinResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildCancelJoinResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildCancelJoinResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildCancelJoinResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildCancelJoinResponse &a, MessageGuildCancelJoinResponse &b);


class MessageGuildAuditPendingMemberRequest {
 public:

  static const char* ascii_fingerprint; // = "7D61C9AA00102AB4D8F72A1DA58297DC";
  static const uint8_t binary_fingerprint[16]; // = {0x7D,0x61,0xC9,0xAA,0x00,0x10,0x2A,0xB4,0xD8,0xF7,0x2A,0x1D,0xA5,0x82,0x97,0xDC};

  MessageGuildAuditPendingMemberRequest() : actor_id_(), audit_result_(0) {
  }

  virtual ~MessageGuildAuditPendingMemberRequest() throw() {}

  std::string actor_id_;
  bool audit_result_;

  void __set_actor_id_(const std::string& val) {
    actor_id_ = val;
  }

  void __set_audit_result_(const bool val) {
    audit_result_ = val;
  }

  bool operator == (const MessageGuildAuditPendingMemberRequest & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(audit_result_ == rhs.audit_result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildAuditPendingMemberRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildAuditPendingMemberRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildAuditPendingMemberRequest &a, MessageGuildAuditPendingMemberRequest &b);


class MessageGuildAuditPendingMemberResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildAuditPendingMemberResponse() : result_(0) {
  }

  virtual ~MessageGuildAuditPendingMemberResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildAuditPendingMemberResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildAuditPendingMemberResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildAuditPendingMemberResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildAuditPendingMemberResponse &a, MessageGuildAuditPendingMemberResponse &b);


class MessageGuildInviteRequest {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  MessageGuildInviteRequest() : actor_name_() {
  }

  virtual ~MessageGuildInviteRequest() throw() {}

  std::string actor_name_;

  void __set_actor_name_(const std::string& val) {
    actor_name_ = val;
  }

  bool operator == (const MessageGuildInviteRequest & rhs) const
  {
    if (!(actor_name_ == rhs.actor_name_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildInviteRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildInviteRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildInviteRequest &a, MessageGuildInviteRequest &b);


class MessageGuildInviteResponse {
 public:

  static const char* ascii_fingerprint; // = "8BBB3D0C3B370CB38F2D1340BB79F0AA";
  static const uint8_t binary_fingerprint[16]; // = {0x8B,0xBB,0x3D,0x0C,0x3B,0x37,0x0C,0xB3,0x8F,0x2D,0x13,0x40,0xBB,0x79,0xF0,0xAA};

  MessageGuildInviteResponse() : result_((GuildErrorCode::type)0) {
  }

  virtual ~MessageGuildInviteResponse() throw() {}

  GuildErrorCode::type result_;

  void __set_result_(const GuildErrorCode::type val) {
    result_ = val;
  }

  bool operator == (const MessageGuildInviteResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildInviteResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildInviteResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildInviteResponse &a, MessageGuildInviteResponse &b);


class MessageGuildInviteNotify {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  MessageGuildInviteNotify() : guild_id_() {
  }

  virtual ~MessageGuildInviteNotify() throw() {}

  std::string guild_id_;

  void __set_guild_id_(const std::string& val) {
    guild_id_ = val;
  }

  bool operator == (const MessageGuildInviteNotify & rhs) const
  {
    if (!(guild_id_ == rhs.guild_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildInviteNotify &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildInviteNotify & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildInviteNotify &a, MessageGuildInviteNotify &b);


class MessageGuildInviteDisposeRequest {
 public:

  static const char* ascii_fingerprint; // = "7D61C9AA00102AB4D8F72A1DA58297DC";
  static const uint8_t binary_fingerprint[16]; // = {0x7D,0x61,0xC9,0xAA,0x00,0x10,0x2A,0xB4,0xD8,0xF7,0x2A,0x1D,0xA5,0x82,0x97,0xDC};

  MessageGuildInviteDisposeRequest() : guild_id_(), result_(0) {
  }

  virtual ~MessageGuildInviteDisposeRequest() throw() {}

  std::string guild_id_;
  bool result_;

  void __set_guild_id_(const std::string& val) {
    guild_id_ = val;
  }

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildInviteDisposeRequest & rhs) const
  {
    if (!(guild_id_ == rhs.guild_id_))
      return false;
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildInviteDisposeRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildInviteDisposeRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildInviteDisposeRequest &a, MessageGuildInviteDisposeRequest &b);


class MessageGuildInviteDisposeResponse {
 public:

  static const char* ascii_fingerprint; // = "8BBB3D0C3B370CB38F2D1340BB79F0AA";
  static const uint8_t binary_fingerprint[16]; // = {0x8B,0xBB,0x3D,0x0C,0x3B,0x37,0x0C,0xB3,0x8F,0x2D,0x13,0x40,0xBB,0x79,0xF0,0xAA};

  MessageGuildInviteDisposeResponse() : result_((GuildErrorCode::type)0) {
  }

  virtual ~MessageGuildInviteDisposeResponse() throw() {}

  GuildErrorCode::type result_;

  void __set_result_(const GuildErrorCode::type val) {
    result_ = val;
  }

  bool operator == (const MessageGuildInviteDisposeResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildInviteDisposeResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildInviteDisposeResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildInviteDisposeResponse &a, MessageGuildInviteDisposeResponse &b);


class MessageGuildLeaveRequest {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildLeaveRequest() {
  }

  virtual ~MessageGuildLeaveRequest() throw() {}


  bool operator == (const MessageGuildLeaveRequest & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildLeaveRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildLeaveRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildLeaveRequest &a, MessageGuildLeaveRequest &b);


class MessageGuildLeaveResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildLeaveResponse() : result_(0) {
  }

  virtual ~MessageGuildLeaveResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildLeaveResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildLeaveResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildLeaveResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildLeaveResponse &a, MessageGuildLeaveResponse &b);


class MessageGuildKickMemberRequest {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  MessageGuildKickMemberRequest() : actor_id_() {
  }

  virtual ~MessageGuildKickMemberRequest() throw() {}

  std::string actor_id_;

  void __set_actor_id_(const std::string& val) {
    actor_id_ = val;
  }

  bool operator == (const MessageGuildKickMemberRequest & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildKickMemberRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildKickMemberRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildKickMemberRequest &a, MessageGuildKickMemberRequest &b);


class MessageGuildKickMemberResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildKickMemberResponse() : result_(0) {
  }

  virtual ~MessageGuildKickMemberResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildKickMemberResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildKickMemberResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildKickMemberResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildKickMemberResponse &a, MessageGuildKickMemberResponse &b);


class MessageGuildKickMemberNotify {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildKickMemberNotify() {
  }

  virtual ~MessageGuildKickMemberNotify() throw() {}


  bool operator == (const MessageGuildKickMemberNotify & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildKickMemberNotify &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildKickMemberNotify & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildKickMemberNotify &a, MessageGuildKickMemberNotify &b);


class MessageGuildGiveUpLeaderPositionRequest {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  MessageGuildGiveUpLeaderPositionRequest() : new_leader_actor_id_() {
  }

  virtual ~MessageGuildGiveUpLeaderPositionRequest() throw() {}

  std::string new_leader_actor_id_;

  void __set_new_leader_actor_id_(const std::string& val) {
    new_leader_actor_id_ = val;
  }

  bool operator == (const MessageGuildGiveUpLeaderPositionRequest & rhs) const
  {
    if (!(new_leader_actor_id_ == rhs.new_leader_actor_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildGiveUpLeaderPositionRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildGiveUpLeaderPositionRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildGiveUpLeaderPositionRequest &a, MessageGuildGiveUpLeaderPositionRequest &b);


class MessageGuildGiveUpLeaderPositionResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildGiveUpLeaderPositionResponse() : result_(0) {
  }

  virtual ~MessageGuildGiveUpLeaderPositionResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildGiveUpLeaderPositionResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildGiveUpLeaderPositionResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildGiveUpLeaderPositionResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildGiveUpLeaderPositionResponse &a, MessageGuildGiveUpLeaderPositionResponse &b);


class MessageGuildGiveUpPositionRequest {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildGiveUpPositionRequest() {
  }

  virtual ~MessageGuildGiveUpPositionRequest() throw() {}


  bool operator == (const MessageGuildGiveUpPositionRequest & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildGiveUpPositionRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildGiveUpPositionRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildGiveUpPositionRequest &a, MessageGuildGiveUpPositionRequest &b);


class MessageGuildGiveUpPositionResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildGiveUpPositionResponse() : result_(0) {
  }

  virtual ~MessageGuildGiveUpPositionResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildGiveUpPositionResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildGiveUpPositionResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildGiveUpPositionResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildGiveUpPositionResponse &a, MessageGuildGiveUpPositionResponse &b);


class MessageGuildSetMemberPositionRequest {
 public:

  static const char* ascii_fingerprint; // = "EEBC915CE44901401D881E6091423036";
  static const uint8_t binary_fingerprint[16]; // = {0xEE,0xBC,0x91,0x5C,0xE4,0x49,0x01,0x40,0x1D,0x88,0x1E,0x60,0x91,0x42,0x30,0x36};

  MessageGuildSetMemberPositionRequest() : actor_id_(), guild_position_(0) {
  }

  virtual ~MessageGuildSetMemberPositionRequest() throw() {}

  std::string actor_id_;
  int32_t guild_position_;

  void __set_actor_id_(const std::string& val) {
    actor_id_ = val;
  }

  void __set_guild_position_(const int32_t val) {
    guild_position_ = val;
  }

  bool operator == (const MessageGuildSetMemberPositionRequest & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(guild_position_ == rhs.guild_position_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildSetMemberPositionRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildSetMemberPositionRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildSetMemberPositionRequest &a, MessageGuildSetMemberPositionRequest &b);


class MessageGuildSetMemberPositionResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildSetMemberPositionResponse() : result_(0) {
  }

  virtual ~MessageGuildSetMemberPositionResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildSetMemberPositionResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildSetMemberPositionResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildSetMemberPositionResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildSetMemberPositionResponse &a, MessageGuildSetMemberPositionResponse &b);


class MessageGuildEditAnnouncementRequest {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  MessageGuildEditAnnouncementRequest() : guild_announcement_() {
  }

  virtual ~MessageGuildEditAnnouncementRequest() throw() {}

  std::string guild_announcement_;

  void __set_guild_announcement_(const std::string& val) {
    guild_announcement_ = val;
  }

  bool operator == (const MessageGuildEditAnnouncementRequest & rhs) const
  {
    if (!(guild_announcement_ == rhs.guild_announcement_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildEditAnnouncementRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildEditAnnouncementRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildEditAnnouncementRequest &a, MessageGuildEditAnnouncementRequest &b);


class MessageGuildEditAnnouncementResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildEditAnnouncementResponse() : result_(0) {
  }

  virtual ~MessageGuildEditAnnouncementResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildEditAnnouncementResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildEditAnnouncementResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildEditAnnouncementResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildEditAnnouncementResponse &a, MessageGuildEditAnnouncementResponse &b);


class MessageGuildUpgradeRequest {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildUpgradeRequest() {
  }

  virtual ~MessageGuildUpgradeRequest() throw() {}


  bool operator == (const MessageGuildUpgradeRequest & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildUpgradeRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildUpgradeRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildUpgradeRequest &a, MessageGuildUpgradeRequest &b);


class MessageGuildUpgradeResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildUpgradeResponse() : result_(0) {
  }

  virtual ~MessageGuildUpgradeResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildUpgradeResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildUpgradeResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildUpgradeResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildUpgradeResponse &a, MessageGuildUpgradeResponse &b);


class MessageGuildDonateRequest {
 public:

  static const char* ascii_fingerprint; // = "46A703A33337BED2F62F386FC66B2A5F";
  static const uint8_t binary_fingerprint[16]; // = {0x46,0xA7,0x03,0xA3,0x33,0x37,0xBE,0xD2,0xF6,0x2F,0x38,0x6F,0xC6,0x6B,0x2A,0x5F};

  MessageGuildDonateRequest() : type_(( ::entity::GuildDonateType::type)0), num_(0) {
  }

  virtual ~MessageGuildDonateRequest() throw() {}

   ::entity::GuildDonateType::type type_;
  int32_t num_;

  void __set_type_(const  ::entity::GuildDonateType::type val) {
    type_ = val;
  }

  void __set_num_(const int32_t val) {
    num_ = val;
  }

  bool operator == (const MessageGuildDonateRequest & rhs) const
  {
    if (!(type_ == rhs.type_))
      return false;
    if (!(num_ == rhs.num_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildDonateRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildDonateRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildDonateRequest &a, MessageGuildDonateRequest &b);


class MessageGuildDonateResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildDonateResponse() : result_(0) {
  }

  virtual ~MessageGuildDonateResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildDonateResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildDonateResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildDonateResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildDonateResponse &a, MessageGuildDonateResponse &b);


class MessageGuildShopUpgradeRequest {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildShopUpgradeRequest() {
  }

  virtual ~MessageGuildShopUpgradeRequest() throw() {}


  bool operator == (const MessageGuildShopUpgradeRequest & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildShopUpgradeRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildShopUpgradeRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildShopUpgradeRequest &a, MessageGuildShopUpgradeRequest &b);


class MessageGuildShopUpgradeResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildShopUpgradeResponse() : result_(0) {
  }

  virtual ~MessageGuildShopUpgradeResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildShopUpgradeResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildShopUpgradeResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildShopUpgradeResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildShopUpgradeResponse &a, MessageGuildShopUpgradeResponse &b);


class MessageGuildShopBuyItemRequest {
 public:

  static const char* ascii_fingerprint; // = "989D1F1AE8D148D5E2119FFEC4BBBEE3";
  static const uint8_t binary_fingerprint[16]; // = {0x98,0x9D,0x1F,0x1A,0xE8,0xD1,0x48,0xD5,0xE2,0x11,0x9F,0xFE,0xC4,0xBB,0xBE,0xE3};

  MessageGuildShopBuyItemRequest() : item_id_(0), item_count_(0) {
  }

  virtual ~MessageGuildShopBuyItemRequest() throw() {}

  int32_t item_id_;
  int32_t item_count_;

  void __set_item_id_(const int32_t val) {
    item_id_ = val;
  }

  void __set_item_count_(const int32_t val) {
    item_count_ = val;
  }

  bool operator == (const MessageGuildShopBuyItemRequest & rhs) const
  {
    if (!(item_id_ == rhs.item_id_))
      return false;
    if (!(item_count_ == rhs.item_count_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildShopBuyItemRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildShopBuyItemRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildShopBuyItemRequest &a, MessageGuildShopBuyItemRequest &b);


class MessageGuildShopBuyItemResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildShopBuyItemResponse() : result_(0) {
  }

  virtual ~MessageGuildShopBuyItemResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildShopBuyItemResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildShopBuyItemResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildShopBuyItemResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildShopBuyItemResponse &a, MessageGuildShopBuyItemResponse &b);


class MessageGuildCollegeUpgradeRequest {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildCollegeUpgradeRequest() {
  }

  virtual ~MessageGuildCollegeUpgradeRequest() throw() {}


  bool operator == (const MessageGuildCollegeUpgradeRequest & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildCollegeUpgradeRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildCollegeUpgradeRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildCollegeUpgradeRequest &a, MessageGuildCollegeUpgradeRequest &b);


class MessageGuildCollegeUpgradeResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildCollegeUpgradeResponse() : result_(0) {
  }

  virtual ~MessageGuildCollegeUpgradeResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildCollegeUpgradeResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildCollegeUpgradeResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildCollegeUpgradeResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildCollegeUpgradeResponse &a, MessageGuildCollegeUpgradeResponse &b);


class MessageGuildCollegeLearnSkillRequest {
 public:

  static const char* ascii_fingerprint; // = "E86CACEB22240450EDCBEFC3A83970E4";
  static const uint8_t binary_fingerprint[16]; // = {0xE8,0x6C,0xAC,0xEB,0x22,0x24,0x04,0x50,0xED,0xCB,0xEF,0xC3,0xA8,0x39,0x70,0xE4};

  MessageGuildCollegeLearnSkillRequest() : guild_skill_id_(0) {
  }

  virtual ~MessageGuildCollegeLearnSkillRequest() throw() {}

  int32_t guild_skill_id_;

  void __set_guild_skill_id_(const int32_t val) {
    guild_skill_id_ = val;
  }

  bool operator == (const MessageGuildCollegeLearnSkillRequest & rhs) const
  {
    if (!(guild_skill_id_ == rhs.guild_skill_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildCollegeLearnSkillRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildCollegeLearnSkillRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildCollegeLearnSkillRequest &a, MessageGuildCollegeLearnSkillRequest &b);


class MessageGuildCollegeLearnSkillResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildCollegeLearnSkillResponse() : result_(0) {
  }

  virtual ~MessageGuildCollegeLearnSkillResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildCollegeLearnSkillResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildCollegeLearnSkillResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildCollegeLearnSkillResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildCollegeLearnSkillResponse &a, MessageGuildCollegeLearnSkillResponse &b);


class MessageGuildIdolPrayRequest {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildIdolPrayRequest() {
  }

  virtual ~MessageGuildIdolPrayRequest() throw() {}


  bool operator == (const MessageGuildIdolPrayRequest & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildIdolPrayRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildIdolPrayRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildIdolPrayRequest &a, MessageGuildIdolPrayRequest &b);


class MessageGuildIdolPrayResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildIdolPrayResponse() : result_(0) {
  }

  virtual ~MessageGuildIdolPrayResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildIdolPrayResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildIdolPrayResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildIdolPrayResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildIdolPrayResponse &a, MessageGuildIdolPrayResponse &b);


class MessageGuildBarrackUpgradeRequest {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildBarrackUpgradeRequest() {
  }

  virtual ~MessageGuildBarrackUpgradeRequest() throw() {}


  bool operator == (const MessageGuildBarrackUpgradeRequest & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildBarrackUpgradeRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildBarrackUpgradeRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildBarrackUpgradeRequest &a, MessageGuildBarrackUpgradeRequest &b);


class MessageGuildBarrackUpgradeResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildBarrackUpgradeResponse() : result_(0) {
  }

  virtual ~MessageGuildBarrackUpgradeResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildBarrackUpgradeResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildBarrackUpgradeResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildBarrackUpgradeResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildBarrackUpgradeResponse &a, MessageGuildBarrackUpgradeResponse &b);


class MessageGuildPlayingGroupOpenRequest {
 public:

  static const char* ascii_fingerprint; // = "E86CACEB22240450EDCBEFC3A83970E4";
  static const uint8_t binary_fingerprint[16]; // = {0xE8,0x6C,0xAC,0xEB,0x22,0x24,0x04,0x50,0xED,0xCB,0xEF,0xC3,0xA8,0x39,0x70,0xE4};

  MessageGuildPlayingGroupOpenRequest() : playing_group_id_(0) {
  }

  virtual ~MessageGuildPlayingGroupOpenRequest() throw() {}

  int32_t playing_group_id_;

  void __set_playing_group_id_(const int32_t val) {
    playing_group_id_ = val;
  }

  bool operator == (const MessageGuildPlayingGroupOpenRequest & rhs) const
  {
    if (!(playing_group_id_ == rhs.playing_group_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildPlayingGroupOpenRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildPlayingGroupOpenRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildPlayingGroupOpenRequest &a, MessageGuildPlayingGroupOpenRequest &b);


class MessageGuildPlayingGroupOpenResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildPlayingGroupOpenResponse() : result_(0) {
  }

  virtual ~MessageGuildPlayingGroupOpenResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildPlayingGroupOpenResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildPlayingGroupOpenResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildPlayingGroupOpenResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildPlayingGroupOpenResponse &a, MessageGuildPlayingGroupOpenResponse &b);


class MessageGuildPlayingGroupOpenNotify {
 public:

  static const char* ascii_fingerprint; // = "E86CACEB22240450EDCBEFC3A83970E4";
  static const uint8_t binary_fingerprint[16]; // = {0xE8,0x6C,0xAC,0xEB,0x22,0x24,0x04,0x50,0xED,0xCB,0xEF,0xC3,0xA8,0x39,0x70,0xE4};

  MessageGuildPlayingGroupOpenNotify() : playing_group_id_(0) {
  }

  virtual ~MessageGuildPlayingGroupOpenNotify() throw() {}

  int32_t playing_group_id_;

  void __set_playing_group_id_(const int32_t val) {
    playing_group_id_ = val;
  }

  bool operator == (const MessageGuildPlayingGroupOpenNotify & rhs) const
  {
    if (!(playing_group_id_ == rhs.playing_group_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildPlayingGroupOpenNotify &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildPlayingGroupOpenNotify & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildPlayingGroupOpenNotify &a, MessageGuildPlayingGroupOpenNotify &b);


class MessageGuildPlayingFinishedNotify {
 public:

  static const char* ascii_fingerprint; // = "E86CACEB22240450EDCBEFC3A83970E4";
  static const uint8_t binary_fingerprint[16]; // = {0xE8,0x6C,0xAC,0xEB,0x22,0x24,0x04,0x50,0xED,0xCB,0xEF,0xC3,0xA8,0x39,0x70,0xE4};

  MessageGuildPlayingFinishedNotify() : playing_template_id_(0) {
  }

  virtual ~MessageGuildPlayingFinishedNotify() throw() {}

  int32_t playing_template_id_;

  void __set_playing_template_id_(const int32_t val) {
    playing_template_id_ = val;
  }

  bool operator == (const MessageGuildPlayingFinishedNotify & rhs) const
  {
    if (!(playing_template_id_ == rhs.playing_template_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildPlayingFinishedNotify &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildPlayingFinishedNotify & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildPlayingFinishedNotify &a, MessageGuildPlayingFinishedNotify &b);


class MessageGuildPlayingAwardRequest {
 public:

  static const char* ascii_fingerprint; // = "E86CACEB22240450EDCBEFC3A83970E4";
  static const uint8_t binary_fingerprint[16]; // = {0xE8,0x6C,0xAC,0xEB,0x22,0x24,0x04,0x50,0xED,0xCB,0xEF,0xC3,0xA8,0x39,0x70,0xE4};

  MessageGuildPlayingAwardRequest() : playing_template_id_(0) {
  }

  virtual ~MessageGuildPlayingAwardRequest() throw() {}

  int32_t playing_template_id_;

  void __set_playing_template_id_(const int32_t val) {
    playing_template_id_ = val;
  }

  bool operator == (const MessageGuildPlayingAwardRequest & rhs) const
  {
    if (!(playing_template_id_ == rhs.playing_template_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildPlayingAwardRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildPlayingAwardRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildPlayingAwardRequest &a, MessageGuildPlayingAwardRequest &b);


class MessageGuildPlayingAwardResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  MessageGuildPlayingAwardResponse() : result_(0) {
  }

  virtual ~MessageGuildPlayingAwardResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const MessageGuildPlayingAwardResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildPlayingAwardResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildPlayingAwardResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildPlayingAwardResponse &a, MessageGuildPlayingAwardResponse &b);


class MessageGuildPlayingResetNotify {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildPlayingResetNotify() {
  }

  virtual ~MessageGuildPlayingResetNotify() throw() {}


  bool operator == (const MessageGuildPlayingResetNotify & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildPlayingResetNotify &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildPlayingResetNotify & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildPlayingResetNotify &a, MessageGuildPlayingResetNotify &b);

}} // namespace

#endif
