/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef functionality_TYPES_H
#define functionality_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>



namespace entity {

struct FunctionalityType {
  enum type {
    MIN = 0,
    ITEM_COMPOSE = 0,
    EQUIP_INTENSIFY = 1,
    HUNT_TREASURE = 2,
    TREASURE = 3,
    GEM_MODULE = 4,
    GEM_SLOT_2 = 5,
    GEM_SLOT_3 = 6,
    GEM_SLOT_4 = 7,
    GEM_SLOT_5 = 8,
    GEM_SLOT_6 = 9,
    GEM_SLOT_7 = 10,
    GEM_SLOT_8 = 11,
    GEM_SLOT_9 = 12,
    SOUL_MODULE = 13,
    SOUL_ALTAR = 14,
    SOUL_SETING = 15,
    SWORD_MODULE = 16,
    NOBLE_MODULE = 17,
    ELEMENT_MODULE = 18,
    SPIRIT_MODULE = 19,
    SPIRIT_UPGRADE = 20,
    SPIRIT_WING_FACADE = 21,
    LEGENDARY_WEAPON_MODULE = 22,
    MAIL_MODULE = 23,
    CONTACTS_MODULE = 24,
    HOMELAND_MODULE = 25,
    HOMELAND_GOLDMINE = 26,
    HOMELAND_POOL = 27,
    HOMELAND_CHURCH = 28,
    HOMELAND_TREE = 29,
    HOMELAND_TOWER = 30,
    HOMELAND_STRONGHOLD = 31,
    TEAM_MODULE = 32,
    GUILD_MODULE = 33,
    TASK_CIRCLE = 34,
    TASK_RISK = 35,
    TASK_TRIP = 36,
    VOCATION_SET = 37,
    AUCTION_MODULE = 38,
    MAZE_MODULE = 39,
    PLAYING_MODULE = 40,
    MULTI_PLAYING = 41,
    MAX = 42
  };
};

extern const std::map<int, const char*> _FunctionalityType_VALUES_TO_NAMES;

struct FunctionalityOpenType {
  enum type {
    MIN = 0,
    ACTOR_LEVEL = 1,
    TASK_ACCEPT = 2,
    TASK_FINISH = 3,
    MALL = 4,
    SPIRIT_LEVEL = 5,
    USE_ITEM = 6,
    CLIENT_REQUEST = 7,
    HOMELAND_TEMPLE_LEVEL = 8,
    MAX = 9
  };
};

extern const std::map<int, const char*> _FunctionalityOpenType_VALUES_TO_NAMES;

} // namespace

#endif
