/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef camp_TYPES_H
#define camp_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>



namespace entity {

struct CampType {
  enum type {
    TYPE_NONE = 1,
    TYPE_NPC_FIELD = 2,
    TYPE_MOSTER_FIELD = 3,
    TYPE_ACTOR_A_ARENA = 4,
    TYPE_ACTOR_B_ARENA = 5,
    TYPE_ACTOR_A_PVP = 6,
    TYPE_NPC_A_PVP = 7,
    TYPE_ACTOR_B_PVP = 8,
    TYPE_NPC_B_PVP = 9,
    TYPE_EXTENTION = 20
  };
};

extern const std::map<int, const char*> _CampType_VALUES_TO_NAMES;

struct CampRelationType {
  enum type {
    MIN = 0,
    HOSTLITY = 1,
    FRIENDLY = 2,
    NEUTRAL = 3,
    NONE = 4,
    MAX = 5
  };
};

extern const std::map<int, const char*> _CampRelationType_VALUES_TO_NAMES;

} // namespace

#endif
