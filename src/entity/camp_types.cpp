/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "camp_types.h"

#include <algorithm>

namespace entity {

int _kCampTypeValues[] = {
  CampType::TYPE_NONE,
  CampType::TYPE_NPC_FIELD,
  CampType::TYPE_MOSTER_FIELD,
  CampType::TYPE_ACTOR_A_ARENA,
  CampType::TYPE_ACTOR_B_ARENA,
  CampType::TYPE_ACTOR_A_PVP,
  CampType::TYPE_NPC_A_PVP,
  CampType::TYPE_ACTOR_B_PVP,
  CampType::TYPE_NPC_B_PVP,
  CampType::TYPE_EXTENTION
};
const char* _kCampTypeNames[] = {
  "TYPE_NONE",
  "TYPE_NPC_FIELD",
  "TYPE_MOSTER_FIELD",
  "TYPE_ACTOR_A_ARENA",
  "TYPE_ACTOR_B_ARENA",
  "TYPE_ACTOR_A_PVP",
  "TYPE_NPC_A_PVP",
  "TYPE_ACTOR_B_PVP",
  "TYPE_NPC_B_PVP",
  "TYPE_EXTENTION"
};
const std::map<int, const char*> _CampType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(10, _kCampTypeValues, _kCampTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));

int _kCampRelationTypeValues[] = {
  CampRelationType::MIN,
  CampRelationType::HOSTLITY,
  CampRelationType::FRIENDLY,
  CampRelationType::NEUTRAL,
  CampRelationType::NONE,
  CampRelationType::MAX
};
const char* _kCampRelationTypeNames[] = {
  "MIN",
  "HOSTLITY",
  "FRIENDLY",
  "NEUTRAL",
  "NONE",
  "MAX"
};
const std::map<int, const char*> _CampRelationType_VALUES_TO_NAMES(::apache::thrift::TEnumIterator(6, _kCampRelationTypeValues, _kCampRelationTypeNames), ::apache::thrift::TEnumIterator(-1, NULL, NULL));

} // namespace
