/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef homeland_TYPES_H
#define homeland_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>



namespace entity {

struct HomelandTreeStageType {
  enum type {
    MIN = 0,
    WATERING = 0,
    GROWING = 1,
    HARVEST = 2,
    MAX = 3
  };
};

extern const std::map<int, const char*> _HomelandTreeStageType_VALUES_TO_NAMES;

struct HomelandEventType {
  enum type {
    MIN = 0,
    HOMELAND_VISIT = 0,
    CHURCH_PRAY = 1,
    TREE_ASSIST_WATER = 2,
    TREE_ASSIST_WATERED = 3,
    TREE_STEAL = 4,
    TREE_STOLEN = 5,
    STRONGHOLD_SUPPORT = 6,
    STRONGHOLD_SUPPORTED = 7,
    BATTLE_DEFENCE_SUCCESS = 8,
    BATTLE_DEFENCE_FAILED = 9,
    BATTLE_ATTACK_SUCCESS = 10,
    BATTLE_ATTACK_FAILED = 11,
    MAX = 12
  };
};

extern const std::map<int, const char*> _HomelandEventType_VALUES_TO_NAMES;

struct HomelandBattleSideType {
  enum type {
    MIN = 0,
    ATTACK = 0,
    DEFENCE = 1,
    MAX = 2
  };
};

extern const std::map<int, const char*> _HomelandBattleSideType_VALUES_TO_NAMES;

struct HomelandBattleUnitType {
  enum type {
    MIN = 0,
    SOUL = 0,
    ACTOR = 1,
    TOWER = 2,
    MAX = 3
  };
};

extern const std::map<int, const char*> _HomelandBattleUnitType_VALUES_TO_NAMES;

struct HomelandBattleActionType {
  enum type {
    MIN = 0,
    ATTACK = 0,
    SPECIAL_SKILL_AXE = 1,
    SPECIAL_SKILL_SHOOT = 2,
    SPECIAL_SKILL_MAGIC = 3,
    AOE_ACTOR = 4,
    AOE_TOWER = 5,
    MAX = 6
  };
};

extern const std::map<int, const char*> _HomelandBattleActionType_VALUES_TO_NAMES;

struct HomelandBattleStateChangeType {
  enum type {
    MIN = 0,
    HURT = 0,
    DODGE = 1,
    CRIT = 2,
    DEAD = 3,
    MAX = 4
  };
};

extern const std::map<int, const char*> _HomelandBattleStateChangeType_VALUES_TO_NAMES;

struct HomelandBattleResultType {
  enum type {
    MIN = 0,
    LOSE = 0,
    TINY_WIN = 1,
    GREAT_WIN = 2,
    PERFECT_WIN = 3,
    MAX = 4
  };
};

extern const std::map<int, const char*> _HomelandBattleResultType_VALUES_TO_NAMES;

} // namespace

#endif
