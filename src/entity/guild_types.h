/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef guild_TYPES_H
#define guild_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>



namespace entity {

struct GuildPositionType {
  enum type {
    MIN = 0,
    MEMBER = 0,
    LEADER = 1,
    MAX = 2
  };
};

extern const std::map<int, const char*> _GuildPositionType_VALUES_TO_NAMES;

struct GuildDonateType {
  enum type {
    MIN = 0,
    GOLD = 0,
    FREEDOM_DOLLARS = 1,
    LIGHT_CRYSTAL = 2,
    DARK_CRYSTAL = 3,
    HOLY_CRYSTAL = 4,
    MAX = 5
  };
};

extern const std::map<int, const char*> _GuildDonateType_VALUES_TO_NAMES;

struct GuildEventType {
  enum type {
    MIN = 0,
    CREATE_GUILD = 0,
    JOIN_GUILD = 1,
    LEAVE_GUILD = 2,
    SET_MEMBER_POSITION = 3,
    RESET_MEMBER_POSITION = 4,
    GIVE_UP_POSITION = 5,
    GIVE_UP_LEADER_POSITION = 6,
    GUILD_UPGRADE = 7,
    GUILD_SHOP_UPGRADE = 8,
    GUILD_COLLEGE_UPGRADE = 9,
    GUILD_BARRACK_UPGRADE = 10,
    MAX = 11
  };
};

extern const std::map<int, const char*> _GuildEventType_VALUES_TO_NAMES;

} // namespace

#endif
