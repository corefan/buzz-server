/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef session_event_TYPES_H
#define session_event_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>



namespace session { namespace server { namespace event {

struct EventType {
  enum type {
    EVENT_MIN = 0,
    EVENT_SYSTEM_SERVER_LOGIN = 1,
    EVENT_SYSTEM_SERVER_LOGOUT = 2,
    EVENT_SYSTEM_DATABASE_SERVER_LOGINED = 3,
    EVENT_ACTOR_LOGIN = 4,
    EVENT_ACTOR_LOGOUT = 5,
    EVENT_ACTOR_SAVE = 6,
    EVENT_ACTOR_EXTENSION_LOAD_FINISH = 7,
    EVENT_ACTOR_LOAD_FINISH = 8,
    EVENT_ACTOR_DAILY_CLEAN = 9,
    EVENT_ACTOR_WEEKLY_CLEAN = 10,
    EVENT_ACTOR_LEVEL_UP = 11,
    EVENT_ACTOR_FUNCTIONALITY_ENABLE = 12,
    EVENT_ACTOR_CHANGE_VOCATION = 13,
    EVENT_ACTOR_CHANGE_FIGHT_SCORE = 14,
    EVENT_ACTOR_JUMP_LOGIN = 15,
    EVENT_ACTOR_JUMP_SCENE = 16,
    EVENT_SOCIAL_CONTACTS_INFO_UPDATE = 17,
    EVENT_SOCIAL_ENEMY_INFO_UPDATE = 18,
    EVENT_HOMELAND_FRIEND_INFO_UPDATE = 19,
    EVENT_HOMELAND_INVADER_INFO_UPDATE = 20,
    EVENT_GUILD_DAILY_CLEAN = 21,
    EVENT_GUILD_WEEKLY_CLEAN = 22,
    EVENT_PLAYING_END = 23,
    EVENT_PLAYING_DESTROY = 24,
    EVENT_MAX = 25
  };
};

extern const std::map<int, const char*> _EventType_VALUES_TO_NAMES;

struct ChannelType {
  enum type {
    CHANNEL_SYSTEM = 0,
    CHANNEL_ACTOR = 1,
    CHANNEL_PLAYING = 2,
    CHANNEL_MAX = 3
  };
};

extern const std::map<int, const char*> _ChannelType_VALUES_TO_NAMES;

}}} // namespace

#endif
