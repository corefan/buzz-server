/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef game_guild_protocol_TYPES_H
#define game_guild_protocol_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include "guild_types.h"
#include "session_game_protocol_types.h"


namespace session { namespace protocol {

struct GuildOperateType {
  enum type {
    ADD = 0,
    REMOVE = 1,
    UPDATE = 2
  };
};

extern const std::map<int, const char*> _GuildOperateType_VALUES_TO_NAMES;

struct GuildSkillOperateType {
  enum type {
    ADD = 0,
    UPDATE = 1,
    CLEAR = 2
  };
};

extern const std::map<int, const char*> _GuildSkillOperateType_VALUES_TO_NAMES;

struct GuildBuffOperateType {
  enum type {
    ADD = 0,
    CLEAR = 1
  };
};

extern const std::map<int, const char*> _GuildBuffOperateType_VALUES_TO_NAMES;

typedef struct _GuildData__isset {
  _GuildData__isset() : name_(false), level_(false), light_attribute_(false), dark_attribute_(false), holy_attribute_(false), shop_level_(false), college_level_(false), barrack_level_(false) {}
  bool name_;
  bool level_;
  bool light_attribute_;
  bool dark_attribute_;
  bool holy_attribute_;
  bool shop_level_;
  bool college_level_;
  bool barrack_level_;
} _GuildData__isset;

class GuildData {
 public:

  static const char* ascii_fingerprint; // = "5ACEDEA50ECC40EA5AF25166CF151C2C";
  static const uint8_t binary_fingerprint[16]; // = {0x5A,0xCE,0xDE,0xA5,0x0E,0xCC,0x40,0xEA,0x5A,0xF2,0x51,0x66,0xCF,0x15,0x1C,0x2C};

  GuildData() : id_(0), name_(), level_(0), light_attribute_(0), dark_attribute_(0), holy_attribute_(0), shop_level_(0), college_level_(0), barrack_level_(0) {
  }

  virtual ~GuildData() throw() {}

  int64_t id_;
  std::string name_;
  int32_t level_;
  int32_t light_attribute_;
  int32_t dark_attribute_;
  int32_t holy_attribute_;
  int32_t shop_level_;
  int32_t college_level_;
  int32_t barrack_level_;

  _GuildData__isset __isset;

  void __set_id_(const int64_t val) {
    id_ = val;
  }

  void __set_name_(const std::string& val) {
    name_ = val;
    __isset.name_ = true;
  }

  void __set_level_(const int32_t val) {
    level_ = val;
    __isset.level_ = true;
  }

  void __set_light_attribute_(const int32_t val) {
    light_attribute_ = val;
    __isset.light_attribute_ = true;
  }

  void __set_dark_attribute_(const int32_t val) {
    dark_attribute_ = val;
    __isset.dark_attribute_ = true;
  }

  void __set_holy_attribute_(const int32_t val) {
    holy_attribute_ = val;
    __isset.holy_attribute_ = true;
  }

  void __set_shop_level_(const int32_t val) {
    shop_level_ = val;
    __isset.shop_level_ = true;
  }

  void __set_college_level_(const int32_t val) {
    college_level_ = val;
    __isset.college_level_ = true;
  }

  void __set_barrack_level_(const int32_t val) {
    barrack_level_ = val;
    __isset.barrack_level_ = true;
  }

  bool operator == (const GuildData & rhs) const
  {
    if (!(id_ == rhs.id_))
      return false;
    if (__isset.name_ != rhs.__isset.name_)
      return false;
    else if (__isset.name_ && !(name_ == rhs.name_))
      return false;
    if (__isset.level_ != rhs.__isset.level_)
      return false;
    else if (__isset.level_ && !(level_ == rhs.level_))
      return false;
    if (__isset.light_attribute_ != rhs.__isset.light_attribute_)
      return false;
    else if (__isset.light_attribute_ && !(light_attribute_ == rhs.light_attribute_))
      return false;
    if (__isset.dark_attribute_ != rhs.__isset.dark_attribute_)
      return false;
    else if (__isset.dark_attribute_ && !(dark_attribute_ == rhs.dark_attribute_))
      return false;
    if (__isset.holy_attribute_ != rhs.__isset.holy_attribute_)
      return false;
    else if (__isset.holy_attribute_ && !(holy_attribute_ == rhs.holy_attribute_))
      return false;
    if (__isset.shop_level_ != rhs.__isset.shop_level_)
      return false;
    else if (__isset.shop_level_ && !(shop_level_ == rhs.shop_level_))
      return false;
    if (__isset.college_level_ != rhs.__isset.college_level_)
      return false;
    else if (__isset.college_level_ && !(college_level_ == rhs.college_level_))
      return false;
    if (__isset.barrack_level_ != rhs.__isset.barrack_level_)
      return false;
    else if (__isset.barrack_level_ && !(barrack_level_ == rhs.barrack_level_))
      return false;
    return true;
  }
  bool operator != (const GuildData &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const GuildData & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(GuildData &a, GuildData &b);

typedef struct _GuildSkillData__isset {
  _GuildSkillData__isset() : effective_level_(false) {}
  bool effective_level_;
} _GuildSkillData__isset;

class GuildSkillData {
 public:

  static const char* ascii_fingerprint; // = "E2ADD47BD922A861BCA548267B9D2CB8";
  static const uint8_t binary_fingerprint[16]; // = {0xE2,0xAD,0xD4,0x7B,0xD9,0x22,0xA8,0x61,0xBC,0xA5,0x48,0x26,0x7B,0x9D,0x2C,0xB8};

  GuildSkillData() : id_(0), effective_level_(0) {
  }

  virtual ~GuildSkillData() throw() {}

  int32_t id_;
  int32_t effective_level_;

  _GuildSkillData__isset __isset;

  void __set_id_(const int32_t val) {
    id_ = val;
  }

  void __set_effective_level_(const int32_t val) {
    effective_level_ = val;
    __isset.effective_level_ = true;
  }

  bool operator == (const GuildSkillData & rhs) const
  {
    if (!(id_ == rhs.id_))
      return false;
    if (__isset.effective_level_ != rhs.__isset.effective_level_)
      return false;
    else if (__isset.effective_level_ && !(effective_level_ == rhs.effective_level_))
      return false;
    return true;
  }
  bool operator != (const GuildSkillData &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const GuildSkillData & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(GuildSkillData &a, GuildSkillData &b);


class GuildActorData {
 public:

  static const char* ascii_fingerprint; // = "4B9FD40E870D3926EA5C4C1EFEF35BCF";
  static const uint8_t binary_fingerprint[16]; // = {0x4B,0x9F,0xD4,0x0E,0x87,0x0D,0x39,0x26,0xEA,0x5C,0x4C,0x1E,0xFE,0xF3,0x5B,0xCF};

  GuildActorData() : guild_id_(0), guild_position_(0), current_contribution_value_(0) {
  }

  virtual ~GuildActorData() throw() {}

  int64_t guild_id_;
  int32_t guild_position_;
  int32_t current_contribution_value_;
  std::vector<GuildSkillData>  guild_skills_;
  std::vector<int32_t>  guild_buffs_;

  void __set_guild_id_(const int64_t val) {
    guild_id_ = val;
  }

  void __set_guild_position_(const int32_t val) {
    guild_position_ = val;
  }

  void __set_current_contribution_value_(const int32_t val) {
    current_contribution_value_ = val;
  }

  void __set_guild_skills_(const std::vector<GuildSkillData> & val) {
    guild_skills_ = val;
  }

  void __set_guild_buffs_(const std::vector<int32_t> & val) {
    guild_buffs_ = val;
  }

  bool operator == (const GuildActorData & rhs) const
  {
    if (!(guild_id_ == rhs.guild_id_))
      return false;
    if (!(guild_position_ == rhs.guild_position_))
      return false;
    if (!(current_contribution_value_ == rhs.current_contribution_value_))
      return false;
    if (!(guild_skills_ == rhs.guild_skills_))
      return false;
    if (!(guild_buffs_ == rhs.guild_buffs_))
      return false;
    return true;
  }
  bool operator != (const GuildActorData &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const GuildActorData & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(GuildActorData &a, GuildActorData &b);


class MessageGuildInfoRequest {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  MessageGuildInfoRequest() {
  }

  virtual ~MessageGuildInfoRequest() throw() {}


  bool operator == (const MessageGuildInfoRequest & /* rhs */) const
  {
    return true;
  }
  bool operator != (const MessageGuildInfoRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildInfoRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildInfoRequest &a, MessageGuildInfoRequest &b);


class MessageGuildInfoResponse {
 public:

  static const char* ascii_fingerprint; // = "0AAA900F7178A72F623E104FCF2E1EA7";
  static const uint8_t binary_fingerprint[16]; // = {0x0A,0xAA,0x90,0x0F,0x71,0x78,0xA7,0x2F,0x62,0x3E,0x10,0x4F,0xCF,0x2E,0x1E,0xA7};

  MessageGuildInfoResponse() {
  }

  virtual ~MessageGuildInfoResponse() throw() {}

  std::vector<GuildData>  guilds_;

  void __set_guilds_(const std::vector<GuildData> & val) {
    guilds_ = val;
  }

  bool operator == (const MessageGuildInfoResponse & rhs) const
  {
    if (!(guilds_ == rhs.guilds_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildInfoResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildInfoResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildInfoResponse &a, MessageGuildInfoResponse &b);


class MessageGuildInfoSynchronize {
 public:

  static const char* ascii_fingerprint; // = "F98B40825BC869D0694E1D5CFCD7F006";
  static const uint8_t binary_fingerprint[16]; // = {0xF9,0x8B,0x40,0x82,0x5B,0xC8,0x69,0xD0,0x69,0x4E,0x1D,0x5C,0xFC,0xD7,0xF0,0x06};

  MessageGuildInfoSynchronize() : type_((GuildOperateType::type)0) {
  }

  virtual ~MessageGuildInfoSynchronize() throw() {}

  GuildOperateType::type type_;
  GuildData data_;

  void __set_type_(const GuildOperateType::type val) {
    type_ = val;
  }

  void __set_data_(const GuildData& val) {
    data_ = val;
  }

  bool operator == (const MessageGuildInfoSynchronize & rhs) const
  {
    if (!(type_ == rhs.type_))
      return false;
    if (!(data_ == rhs.data_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildInfoSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildInfoSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildInfoSynchronize &a, MessageGuildInfoSynchronize &b);


class MessageGuildActorInitialize {
 public:

  static const char* ascii_fingerprint; // = "F58F0E8469DFC4E6D2F889E2AA90FA5A";
  static const uint8_t binary_fingerprint[16]; // = {0xF5,0x8F,0x0E,0x84,0x69,0xDF,0xC4,0xE6,0xD2,0xF8,0x89,0xE2,0xAA,0x90,0xFA,0x5A};

  MessageGuildActorInitialize() : actor_id_(0) {
  }

  virtual ~MessageGuildActorInitialize() throw() {}

  int64_t actor_id_;
  GuildActorData data_;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_data_(const GuildActorData& val) {
    data_ = val;
  }

  bool operator == (const MessageGuildActorInitialize & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(data_ == rhs.data_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildActorInitialize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildActorInitialize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildActorInitialize &a, MessageGuildActorInitialize &b);

typedef struct _MessageGuildActorSynchronize__isset {
  _MessageGuildActorSynchronize__isset() : guild_id_(false), guild_name_(false), guild_position_(false), current_contribution_value_(false) {}
  bool guild_id_;
  bool guild_name_;
  bool guild_position_;
  bool current_contribution_value_;
} _MessageGuildActorSynchronize__isset;

class MessageGuildActorSynchronize {
 public:

  static const char* ascii_fingerprint; // = "628F9754ED6822507C47F875E04A78DB";
  static const uint8_t binary_fingerprint[16]; // = {0x62,0x8F,0x97,0x54,0xED,0x68,0x22,0x50,0x7C,0x47,0xF8,0x75,0xE0,0x4A,0x78,0xDB};

  MessageGuildActorSynchronize() : actor_id_(0), guild_id_(0), guild_name_(), guild_position_(0), current_contribution_value_(0) {
  }

  virtual ~MessageGuildActorSynchronize() throw() {}

  int64_t actor_id_;
  int64_t guild_id_;
  std::string guild_name_;
  int32_t guild_position_;
  int32_t current_contribution_value_;

  _MessageGuildActorSynchronize__isset __isset;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_guild_id_(const int64_t val) {
    guild_id_ = val;
    __isset.guild_id_ = true;
  }

  void __set_guild_name_(const std::string& val) {
    guild_name_ = val;
    __isset.guild_name_ = true;
  }

  void __set_guild_position_(const int32_t val) {
    guild_position_ = val;
    __isset.guild_position_ = true;
  }

  void __set_current_contribution_value_(const int32_t val) {
    current_contribution_value_ = val;
    __isset.current_contribution_value_ = true;
  }

  bool operator == (const MessageGuildActorSynchronize & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (__isset.guild_id_ != rhs.__isset.guild_id_)
      return false;
    else if (__isset.guild_id_ && !(guild_id_ == rhs.guild_id_))
      return false;
    if (__isset.guild_name_ != rhs.__isset.guild_name_)
      return false;
    else if (__isset.guild_name_ && !(guild_name_ == rhs.guild_name_))
      return false;
    if (__isset.guild_position_ != rhs.__isset.guild_position_)
      return false;
    else if (__isset.guild_position_ && !(guild_position_ == rhs.guild_position_))
      return false;
    if (__isset.current_contribution_value_ != rhs.__isset.current_contribution_value_)
      return false;
    else if (__isset.current_contribution_value_ && !(current_contribution_value_ == rhs.current_contribution_value_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildActorSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildActorSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildActorSynchronize &a, MessageGuildActorSynchronize &b);


class MessageGuildSkillSynchronize {
 public:

  static const char* ascii_fingerprint; // = "D7FA968AAC2109DF376D9CC75D7DECF8";
  static const uint8_t binary_fingerprint[16]; // = {0xD7,0xFA,0x96,0x8A,0xAC,0x21,0x09,0xDF,0x37,0x6D,0x9C,0xC7,0x5D,0x7D,0xEC,0xF8};

  MessageGuildSkillSynchronize() : actor_id_(0), type_((GuildSkillOperateType::type)0) {
  }

  virtual ~MessageGuildSkillSynchronize() throw() {}

  int64_t actor_id_;
  GuildSkillOperateType::type type_;
  GuildSkillData data_;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_type_(const GuildSkillOperateType::type val) {
    type_ = val;
  }

  void __set_data_(const GuildSkillData& val) {
    data_ = val;
  }

  bool operator == (const MessageGuildSkillSynchronize & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(type_ == rhs.type_))
      return false;
    if (!(data_ == rhs.data_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildSkillSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildSkillSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildSkillSynchronize &a, MessageGuildSkillSynchronize &b);


class MessageGuildBuffSynchronize {
 public:

  static const char* ascii_fingerprint; // = "DF2FE2E4EB425A90BF93B80E73230790";
  static const uint8_t binary_fingerprint[16]; // = {0xDF,0x2F,0xE2,0xE4,0xEB,0x42,0x5A,0x90,0xBF,0x93,0xB8,0x0E,0x73,0x23,0x07,0x90};

  MessageGuildBuffSynchronize() : actor_id_(0), type_((GuildBuffOperateType::type)0), guild_buff_id_(0) {
  }

  virtual ~MessageGuildBuffSynchronize() throw() {}

  int64_t actor_id_;
  GuildBuffOperateType::type type_;
  int32_t guild_buff_id_;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_type_(const GuildBuffOperateType::type val) {
    type_ = val;
  }

  void __set_guild_buff_id_(const int32_t val) {
    guild_buff_id_ = val;
  }

  bool operator == (const MessageGuildBuffSynchronize & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(type_ == rhs.type_))
      return false;
    if (!(guild_buff_id_ == rhs.guild_buff_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildBuffSynchronize &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildBuffSynchronize & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildBuffSynchronize &a, MessageGuildBuffSynchronize &b);


class MessageGuildCreateRequest {
 public:

  static const char* ascii_fingerprint; // = "FA14FF3C297F6EBE2FC46FD846FF0E76";
  static const uint8_t binary_fingerprint[16]; // = {0xFA,0x14,0xFF,0x3C,0x29,0x7F,0x6E,0xBE,0x2F,0xC4,0x6F,0xD8,0x46,0xFF,0x0E,0x76};

  MessageGuildCreateRequest() : actor_id_(0), guild_name_(), guild_logo_(0) {
  }

  virtual ~MessageGuildCreateRequest() throw() {}

  int64_t actor_id_;
  std::string guild_name_;
  int32_t guild_logo_;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_guild_name_(const std::string& val) {
    guild_name_ = val;
  }

  void __set_guild_logo_(const int32_t val) {
    guild_logo_ = val;
  }

  bool operator == (const MessageGuildCreateRequest & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(guild_name_ == rhs.guild_name_))
      return false;
    if (!(guild_logo_ == rhs.guild_logo_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildCreateRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildCreateRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildCreateRequest &a, MessageGuildCreateRequest &b);


class MessageGuildDonateRequest {
 public:

  static const char* ascii_fingerprint; // = "DF2FE2E4EB425A90BF93B80E73230790";
  static const uint8_t binary_fingerprint[16]; // = {0xDF,0x2F,0xE2,0xE4,0xEB,0x42,0x5A,0x90,0xBF,0x93,0xB8,0x0E,0x73,0x23,0x07,0x90};

  MessageGuildDonateRequest() : actor_id_(0), type_(( ::entity::GuildDonateType::type)0), num_(0) {
  }

  virtual ~MessageGuildDonateRequest() throw() {}

  int64_t actor_id_;
   ::entity::GuildDonateType::type type_;
  int32_t num_;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_type_(const  ::entity::GuildDonateType::type val) {
    type_ = val;
  }

  void __set_num_(const int32_t val) {
    num_ = val;
  }

  bool operator == (const MessageGuildDonateRequest & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(type_ == rhs.type_))
      return false;
    if (!(num_ == rhs.num_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildDonateRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildDonateRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildDonateRequest &a, MessageGuildDonateRequest &b);


class MessageGuildShopBuyItemRequest {
 public:

  static const char* ascii_fingerprint; // = "9C4E30169AD9E0914633984FE5C16314";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x4E,0x30,0x16,0x9A,0xD9,0xE0,0x91,0x46,0x33,0x98,0x4F,0xE5,0xC1,0x63,0x14};

  MessageGuildShopBuyItemRequest() : actor_id_(0), item_id_(0), item_count_(0) {
  }

  virtual ~MessageGuildShopBuyItemRequest() throw() {}

  int64_t actor_id_;
  int32_t item_id_;
  int32_t item_count_;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_item_id_(const int32_t val) {
    item_id_ = val;
  }

  void __set_item_count_(const int32_t val) {
    item_count_ = val;
  }

  bool operator == (const MessageGuildShopBuyItemRequest & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(item_id_ == rhs.item_id_))
      return false;
    if (!(item_count_ == rhs.item_count_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildShopBuyItemRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildShopBuyItemRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildShopBuyItemRequest &a, MessageGuildShopBuyItemRequest &b);


class MessageGuildShopBuyItemResponse {
 public:

  static const char* ascii_fingerprint; // = "9C4E30169AD9E0914633984FE5C16314";
  static const uint8_t binary_fingerprint[16]; // = {0x9C,0x4E,0x30,0x16,0x9A,0xD9,0xE0,0x91,0x46,0x33,0x98,0x4F,0xE5,0xC1,0x63,0x14};

  MessageGuildShopBuyItemResponse() : actor_id_(0), item_id_(0), item_count_(0) {
  }

  virtual ~MessageGuildShopBuyItemResponse() throw() {}

  int64_t actor_id_;
  int32_t item_id_;
  int32_t item_count_;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_item_id_(const int32_t val) {
    item_id_ = val;
  }

  void __set_item_count_(const int32_t val) {
    item_count_ = val;
  }

  bool operator == (const MessageGuildShopBuyItemResponse & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(item_id_ == rhs.item_id_))
      return false;
    if (!(item_count_ == rhs.item_count_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildShopBuyItemResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildShopBuyItemResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildShopBuyItemResponse &a, MessageGuildShopBuyItemResponse &b);


class MessageGuildPlayingAwardRequest {
 public:

  static const char* ascii_fingerprint; // = "AFAFBCDB9822F9D1AA4E44188E720B47";
  static const uint8_t binary_fingerprint[16]; // = {0xAF,0xAF,0xBC,0xDB,0x98,0x22,0xF9,0xD1,0xAA,0x4E,0x44,0x18,0x8E,0x72,0x0B,0x47};

  MessageGuildPlayingAwardRequest() : actor_id_(0), playing_template_id_(0) {
  }

  virtual ~MessageGuildPlayingAwardRequest() throw() {}

  int64_t actor_id_;
  int32_t playing_template_id_;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_playing_template_id_(const int32_t val) {
    playing_template_id_ = val;
  }

  bool operator == (const MessageGuildPlayingAwardRequest & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(playing_template_id_ == rhs.playing_template_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildPlayingAwardRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildPlayingAwardRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildPlayingAwardRequest &a, MessageGuildPlayingAwardRequest &b);

typedef struct _MessageGuildPlayingAwardResponse__isset {
  _MessageGuildPlayingAwardResponse__isset() : playing_template_id_(false) {}
  bool playing_template_id_;
} _MessageGuildPlayingAwardResponse__isset;

class MessageGuildPlayingAwardResponse {
 public:

  static const char* ascii_fingerprint; // = "5A45E85EA6F562454AF8551579601C4B";
  static const uint8_t binary_fingerprint[16]; // = {0x5A,0x45,0xE8,0x5E,0xA6,0xF5,0x62,0x45,0x4A,0xF8,0x55,0x15,0x79,0x60,0x1C,0x4B};

  MessageGuildPlayingAwardResponse() : actor_id_(0), result_(0), playing_template_id_(0) {
  }

  virtual ~MessageGuildPlayingAwardResponse() throw() {}

  int64_t actor_id_;
  bool result_;
  int32_t playing_template_id_;

  _MessageGuildPlayingAwardResponse__isset __isset;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_result_(const bool val) {
    result_ = val;
  }

  void __set_playing_template_id_(const int32_t val) {
    playing_template_id_ = val;
    __isset.playing_template_id_ = true;
  }

  bool operator == (const MessageGuildPlayingAwardResponse & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(result_ == rhs.result_))
      return false;
    if (__isset.playing_template_id_ != rhs.__isset.playing_template_id_)
      return false;
    else if (__isset.playing_template_id_ && !(playing_template_id_ == rhs.playing_template_id_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildPlayingAwardResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildPlayingAwardResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildPlayingAwardResponse &a, MessageGuildPlayingAwardResponse &b);


class MessageGuildAddContributionRequest {
 public:

  static const char* ascii_fingerprint; // = "AFAFBCDB9822F9D1AA4E44188E720B47";
  static const uint8_t binary_fingerprint[16]; // = {0xAF,0xAF,0xBC,0xDB,0x98,0x22,0xF9,0xD1,0xAA,0x4E,0x44,0x18,0x8E,0x72,0x0B,0x47};

  MessageGuildAddContributionRequest() : actor_id_(0), add_value_(0) {
  }

  virtual ~MessageGuildAddContributionRequest() throw() {}

  int64_t actor_id_;
  int32_t add_value_;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_add_value_(const int32_t val) {
    add_value_ = val;
  }

  bool operator == (const MessageGuildAddContributionRequest & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(add_value_ == rhs.add_value_))
      return false;
    return true;
  }
  bool operator != (const MessageGuildAddContributionRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const MessageGuildAddContributionRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(MessageGuildAddContributionRequest &a, MessageGuildAddContributionRequest &b);

}} // namespace

#endif
