/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef game_system_event_TYPES_H
#define game_system_event_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include "game_event_types.h"


namespace game { namespace server { namespace event {


class EventSystemLoginSession {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  EventSystemLoginSession() {
  }

  virtual ~EventSystemLoginSession() throw() {}


  bool operator == (const EventSystemLoginSession & /* rhs */) const
  {
    return true;
  }
  bool operator != (const EventSystemLoginSession &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const EventSystemLoginSession & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(EventSystemLoginSession &a, EventSystemLoginSession &b);

}}} // namespace

#endif
