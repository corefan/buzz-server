/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef storage_spirit_facade_save_TYPES_H
#define storage_spirit_facade_save_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include "storage_spirit_facade_login_types.h"


namespace database { namespace protocol {


class StorageSpiritFacadeSaveRequest {
 public:

  static const char* ascii_fingerprint; // = "FFB599E507E03255B3BFFB5F80332755";
  static const uint8_t binary_fingerprint[16]; // = {0xFF,0xB5,0x99,0xE5,0x07,0xE0,0x32,0x55,0xB3,0xBF,0xFB,0x5F,0x80,0x33,0x27,0x55};

  StorageSpiritFacadeSaveRequest() : actor_id_(0) {
  }

  virtual ~StorageSpiritFacadeSaveRequest() throw() {}

  int64_t actor_id_;
  std::vector< ::database::protocol::StorageSpiritFacadeField>  fields_;

  void __set_actor_id_(const int64_t val) {
    actor_id_ = val;
  }

  void __set_fields_(const std::vector< ::database::protocol::StorageSpiritFacadeField> & val) {
    fields_ = val;
  }

  bool operator == (const StorageSpiritFacadeSaveRequest & rhs) const
  {
    if (!(actor_id_ == rhs.actor_id_))
      return false;
    if (!(fields_ == rhs.fields_))
      return false;
    return true;
  }
  bool operator != (const StorageSpiritFacadeSaveRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const StorageSpiritFacadeSaveRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(StorageSpiritFacadeSaveRequest &a, StorageSpiritFacadeSaveRequest &b);


class StorageSpiritFacadeSaveResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  StorageSpiritFacadeSaveResponse() : result_(0) {
  }

  virtual ~StorageSpiritFacadeSaveResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const StorageSpiritFacadeSaveResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const StorageSpiritFacadeSaveResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const StorageSpiritFacadeSaveResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(StorageSpiritFacadeSaveResponse &a, StorageSpiritFacadeSaveResponse &b);

}} // namespace

#endif
