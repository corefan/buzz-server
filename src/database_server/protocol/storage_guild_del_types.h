/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef storage_guild_del_TYPES_H
#define storage_guild_del_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>



namespace database { namespace protocol {


class StorageGuildDelRequest {
 public:

  static const char* ascii_fingerprint; // = "56A59CE7FFAF82BCA8A19FAACDE4FB75";
  static const uint8_t binary_fingerprint[16]; // = {0x56,0xA5,0x9C,0xE7,0xFF,0xAF,0x82,0xBC,0xA8,0xA1,0x9F,0xAA,0xCD,0xE4,0xFB,0x75};

  StorageGuildDelRequest() : guild_id_(0) {
  }

  virtual ~StorageGuildDelRequest() throw() {}

  int64_t guild_id_;

  void __set_guild_id_(const int64_t val) {
    guild_id_ = val;
  }

  bool operator == (const StorageGuildDelRequest & rhs) const
  {
    if (!(guild_id_ == rhs.guild_id_))
      return false;
    return true;
  }
  bool operator != (const StorageGuildDelRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const StorageGuildDelRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(StorageGuildDelRequest &a, StorageGuildDelRequest &b);


class StorageGuildDelResponse {
 public:

  static const char* ascii_fingerprint; // = "5892306F7B861249AE8E27C8ED619593";
  static const uint8_t binary_fingerprint[16]; // = {0x58,0x92,0x30,0x6F,0x7B,0x86,0x12,0x49,0xAE,0x8E,0x27,0xC8,0xED,0x61,0x95,0x93};

  StorageGuildDelResponse() : result_(0) {
  }

  virtual ~StorageGuildDelResponse() throw() {}

  bool result_;

  void __set_result_(const bool val) {
    result_ = val;
  }

  bool operator == (const StorageGuildDelResponse & rhs) const
  {
    if (!(result_ == rhs.result_))
      return false;
    return true;
  }
  bool operator != (const StorageGuildDelResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const StorageGuildDelResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(StorageGuildDelResponse &a, StorageGuildDelResponse &b);

}} // namespace

#endif
