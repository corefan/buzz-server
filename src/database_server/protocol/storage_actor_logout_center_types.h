/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef storage_actor_logout_center_TYPES_H
#define storage_actor_logout_center_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>



namespace database { namespace protocol {


class StorageActorLogoutCenterRequest {
 public:

  static const char* ascii_fingerprint; // = "56A59CE7FFAF82BCA8A19FAACDE4FB75";
  static const uint8_t binary_fingerprint[16]; // = {0x56,0xA5,0x9C,0xE7,0xFF,0xAF,0x82,0xBC,0xA8,0xA1,0x9F,0xAA,0xCD,0xE4,0xFB,0x75};

  StorageActorLogoutCenterRequest() : id_(0) {
  }

  virtual ~StorageActorLogoutCenterRequest() throw() {}

  int64_t id_;

  void __set_id_(const int64_t val) {
    id_ = val;
  }

  bool operator == (const StorageActorLogoutCenterRequest & rhs) const
  {
    if (!(id_ == rhs.id_))
      return false;
    return true;
  }
  bool operator != (const StorageActorLogoutCenterRequest &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const StorageActorLogoutCenterRequest & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(StorageActorLogoutCenterRequest &a, StorageActorLogoutCenterRequest &b);


class StorageActorLogoutCenterResponse {
 public:

  static const char* ascii_fingerprint; // = "99914B932BD37A50B983C5E7C90AE93B";
  static const uint8_t binary_fingerprint[16]; // = {0x99,0x91,0x4B,0x93,0x2B,0xD3,0x7A,0x50,0xB9,0x83,0xC5,0xE7,0xC9,0x0A,0xE9,0x3B};

  StorageActorLogoutCenterResponse() {
  }

  virtual ~StorageActorLogoutCenterResponse() throw() {}


  bool operator == (const StorageActorLogoutCenterResponse & /* rhs */) const
  {
    return true;
  }
  bool operator != (const StorageActorLogoutCenterResponse &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const StorageActorLogoutCenterResponse & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(StorageActorLogoutCenterResponse &a, StorageActorLogoutCenterResponse &b);

}} // namespace

#endif
