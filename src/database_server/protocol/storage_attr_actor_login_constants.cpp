/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "storage_attr_actor_login_constants.h"

namespace database { namespace protocol {

const storage_attr_actor_loginConstants g_storage_attr_actor_login_constants;

storage_attr_actor_loginConstants::storage_attr_actor_loginConstants() {
  kAttrActorFieldStr.push_back("noble_level");
  kAttrActorFieldStr.push_back("noble_used_item_count");
  kAttrActorFieldStr.push_back("noble_max_hp_add_value");
  kAttrActorFieldStr.push_back("noble_max_mp_add_value");
  kAttrActorFieldStr.push_back("noble_physics_attack_add_value");
  kAttrActorFieldStr.push_back("noble_physics_defence_add_value");
  kAttrActorFieldStr.push_back("noble_magic_attack_add_value");
  kAttrActorFieldStr.push_back("noble_magic_defence_add_value");
  kAttrActorFieldStr.push_back("noble_dodge_add_value");
  kAttrActorFieldStr.push_back("noble_crit_add_value");
  kAttrActorFieldStr.push_back("noble_ignore_defence_add_value");
  kAttrActorFieldStr.push_back("sword_avail_step");
  kAttrActorFieldStr.push_back("sword_current_step");
  kAttrActorFieldStr.push_back("sword_lucky_value");
  kAttrActorFieldStr.push_back("sword_gain_time");
  kAttrActorFieldStr.push_back("element_level");
  kAttrActorFieldStr.push_back("spirit_level");
  kAttrActorFieldStr.push_back("spirit_lucky_value");
  kAttrActorFieldStr.push_back("spirit_current_facade_type");
  kAttrActorFieldStr.push_back("spirit_horse_facade_id");
  kAttrActorFieldStr.push_back("spirit_wing_facade_id");
  kAttrActorFieldStr.push_back("runes");
  kAttrActorFieldStr.push_back("legendary_weapon_pieces");

}

}} // namespace

