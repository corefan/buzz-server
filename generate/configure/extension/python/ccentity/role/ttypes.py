#
# Autogenerated by Thrift Compiler (0.9.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

from thrift.Thrift import TType, TMessageType, TException, TApplicationException

from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol, TProtocol
try:
  from thrift.protocol import fastbinary
except:
  fastbinary = None


class RoleAoiFields:
  AOI_BEGIN = 0
  LEVEL = 0
  VOCATION = 1
  CURRENT_HP = 2
  MAX_HP = 3
  CURRENT_MP = 4
  MAX_MP = 5
  MOVE_SPEED = 6
  STATUS = 7
  COMMON_STATUS = 8
  CAMP = 9
  DIRECTION = 10
  AOI_END = 11

  _VALUES_TO_NAMES = {
    0: "AOI_BEGIN",
    0: "LEVEL",
    1: "VOCATION",
    2: "CURRENT_HP",
    3: "MAX_HP",
    4: "CURRENT_MP",
    5: "MAX_MP",
    6: "MOVE_SPEED",
    7: "STATUS",
    8: "COMMON_STATUS",
    9: "CAMP",
    10: "DIRECTION",
    11: "AOI_END",
  }

  _NAMES_TO_VALUES = {
    "AOI_BEGIN": 0,
    "LEVEL": 0,
    "VOCATION": 1,
    "CURRENT_HP": 2,
    "MAX_HP": 3,
    "CURRENT_MP": 4,
    "MAX_MP": 5,
    "MOVE_SPEED": 6,
    "STATUS": 7,
    "COMMON_STATUS": 8,
    "CAMP": 9,
    "DIRECTION": 10,
    "AOI_END": 11,
  }

class RoleClientFields:
  CLIENT_BEGIN = 0
  PHYSIQUE = 0
  STRENGTH = 1
  INTELLIGENCE = 2
  AGILE = 3
  SPIRIT = 4
  PHYSICS_ATTACK = 5
  PHYSICS_DEFENCE = 6
  MAGIC_ATTACK = 7
  MAGIC_DEFENCE = 8
  DODGE = 9
  CRIT = 10
  IGNORE_DEFENCE = 11
  CURRENT_ENERGY = 12
  MAX_ENERGY = 13
  ENERGY_INCREMENT = 14
  CLIENT_END = 15

  _VALUES_TO_NAMES = {
    0: "CLIENT_BEGIN",
    0: "PHYSIQUE",
    1: "STRENGTH",
    2: "INTELLIGENCE",
    3: "AGILE",
    4: "SPIRIT",
    5: "PHYSICS_ATTACK",
    6: "PHYSICS_DEFENCE",
    7: "MAGIC_ATTACK",
    8: "MAGIC_DEFENCE",
    9: "DODGE",
    10: "CRIT",
    11: "IGNORE_DEFENCE",
    12: "CURRENT_ENERGY",
    13: "MAX_ENERGY",
    14: "ENERGY_INCREMENT",
    15: "CLIENT_END",
  }

  _NAMES_TO_VALUES = {
    "CLIENT_BEGIN": 0,
    "PHYSIQUE": 0,
    "STRENGTH": 1,
    "INTELLIGENCE": 2,
    "AGILE": 3,
    "SPIRIT": 4,
    "PHYSICS_ATTACK": 5,
    "PHYSICS_DEFENCE": 6,
    "MAGIC_ATTACK": 7,
    "MAGIC_DEFENCE": 8,
    "DODGE": 9,
    "CRIT": 10,
    "IGNORE_DEFENCE": 11,
    "CURRENT_ENERGY": 12,
    "MAX_ENERGY": 13,
    "ENERGY_INCREMENT": 14,
    "CLIENT_END": 15,
  }

class RoleServerFields:
  SERVER_BEGIN = 0
  MAX_HP_ADD_VALUE = 0
  MAX_HP_ADD_SECOND_VALUE = 1
  MAX_HP_ADD_PERCENT = 2
  MAX_MP_ADD_VALUE = 3
  MAX_MP_ADD_SECOND_VALUE = 4
  MAX_MP_ADD_PERCENT = 5
  MOVE_SPEED_ADD_VALUE = 6
  MOVE_SPEED_ADD_SECOND_VALUE = 7
  MOVE_SPEED_ADD_PERCENT = 8
  PHYSIQUE_ADD_VALUE = 9
  PHYSIQUE_ADD_SECOND_VALUE = 10
  PHYSIQUE_ADD_PERCENT = 11
  STRENGTH_ADD_VALUE = 12
  STRENGTH_ADD_SECOND_VALUE = 13
  STRENGTH_ADD_PERCENT = 14
  INTELLIGENCE_ADD_VALUE = 15
  INTELLIGENCE_ADD_SECOND_VALUE = 16
  INTELLIGENCE_ADD_PERCENT = 17
  AGILE_ADD_VALUE = 18
  AGILE_ADD_SECOND_VALUE = 19
  AGILE_ADD_PERCENT = 20
  SPIRIT_ADD_VALUE = 21
  SPIRIT_ADD_SECOND_VALUE = 22
  SPIRIT_ADD_PERCENT = 23
  PHYSICS_ATTACK_ADD_VALUE = 24
  PHYSICS_ATTACK_ADD_SECOND_VALUE = 25
  PHYSICS_ATTACK_ADD_PERCENT = 26
  PHYSICS_DEFENCE_ADD_VALUE = 27
  PHYSICS_DEFENCE_ADD_SECOND_VALUE = 28
  PHYSICS_DEFENCE_ADD_PERCENT = 29
  MAGIC_ATTACK_ADD_VALUE = 30
  MAGIC_ATTACK_ADD_SECOND_VALUE = 31
  MAGIC_ATTACK_ADD_PERCENT = 32
  MAGIC_DEFENCE_ADD_VALUE = 33
  MAGIC_DEFENCE_ADD_SECOND_VALUE = 34
  MAGIC_DEFENCE_ADD_PERCENT = 35
  DODGE_ADD_VALUE = 36
  DODGE_ADD_SECOND_VALUE = 37
  DODGE_ADD_PERCENT = 38
  DODGE_PERCENT_ADD_VALUE = 39
  CRIT_ADD_VALUE = 40
  CRIT_ADD_SECOND_VALUE = 41
  CRIT_ADD_PERCENT = 42
  CRIT_PERCENT_ADD_VALUE = 43
  CRIT_EFFECT_PERCENT_ADD_VALUE = 44
  IGNORE_DEFENCE_ADD_VALUE = 45
  IGNORE_DEFENCE_ADD_SECOND_VALUE = 46
  IGNORE_DEFENCE_ADD_PERCENT = 47
  IGNORE_DEFENCE_PERCENT_ADD_VALUE = 48
  PHYSICS_HURT_REDUCE_ADD_PERCENT = 49
  MAGIC_HURT_REDUCE_ADD_PERCENT = 50
  HURT_REDUCE_ADD_PERCENT = 51
  HURT_RANDOM_PERCENT_ADD = 52
  CURE_PERCENT_ADD = 53
  MAX_ENERGY_ADD_VALUE = 54
  MAX_ENERGY_ADD_SECOND_VALUE = 55
  MAX_ENERGY_ADD_PERCENT = 56
  ENERGY_INCREMENT_ADD_VALUE = 57
  ENERGY_INCREMENT_ADD_SECOND_VALUE = 58
  ENERGY_INCREMENT_ADD_PERCENT = 59
  SERVER_END = 60

  _VALUES_TO_NAMES = {
    0: "SERVER_BEGIN",
    0: "MAX_HP_ADD_VALUE",
    1: "MAX_HP_ADD_SECOND_VALUE",
    2: "MAX_HP_ADD_PERCENT",
    3: "MAX_MP_ADD_VALUE",
    4: "MAX_MP_ADD_SECOND_VALUE",
    5: "MAX_MP_ADD_PERCENT",
    6: "MOVE_SPEED_ADD_VALUE",
    7: "MOVE_SPEED_ADD_SECOND_VALUE",
    8: "MOVE_SPEED_ADD_PERCENT",
    9: "PHYSIQUE_ADD_VALUE",
    10: "PHYSIQUE_ADD_SECOND_VALUE",
    11: "PHYSIQUE_ADD_PERCENT",
    12: "STRENGTH_ADD_VALUE",
    13: "STRENGTH_ADD_SECOND_VALUE",
    14: "STRENGTH_ADD_PERCENT",
    15: "INTELLIGENCE_ADD_VALUE",
    16: "INTELLIGENCE_ADD_SECOND_VALUE",
    17: "INTELLIGENCE_ADD_PERCENT",
    18: "AGILE_ADD_VALUE",
    19: "AGILE_ADD_SECOND_VALUE",
    20: "AGILE_ADD_PERCENT",
    21: "SPIRIT_ADD_VALUE",
    22: "SPIRIT_ADD_SECOND_VALUE",
    23: "SPIRIT_ADD_PERCENT",
    24: "PHYSICS_ATTACK_ADD_VALUE",
    25: "PHYSICS_ATTACK_ADD_SECOND_VALUE",
    26: "PHYSICS_ATTACK_ADD_PERCENT",
    27: "PHYSICS_DEFENCE_ADD_VALUE",
    28: "PHYSICS_DEFENCE_ADD_SECOND_VALUE",
    29: "PHYSICS_DEFENCE_ADD_PERCENT",
    30: "MAGIC_ATTACK_ADD_VALUE",
    31: "MAGIC_ATTACK_ADD_SECOND_VALUE",
    32: "MAGIC_ATTACK_ADD_PERCENT",
    33: "MAGIC_DEFENCE_ADD_VALUE",
    34: "MAGIC_DEFENCE_ADD_SECOND_VALUE",
    35: "MAGIC_DEFENCE_ADD_PERCENT",
    36: "DODGE_ADD_VALUE",
    37: "DODGE_ADD_SECOND_VALUE",
    38: "DODGE_ADD_PERCENT",
    39: "DODGE_PERCENT_ADD_VALUE",
    40: "CRIT_ADD_VALUE",
    41: "CRIT_ADD_SECOND_VALUE",
    42: "CRIT_ADD_PERCENT",
    43: "CRIT_PERCENT_ADD_VALUE",
    44: "CRIT_EFFECT_PERCENT_ADD_VALUE",
    45: "IGNORE_DEFENCE_ADD_VALUE",
    46: "IGNORE_DEFENCE_ADD_SECOND_VALUE",
    47: "IGNORE_DEFENCE_ADD_PERCENT",
    48: "IGNORE_DEFENCE_PERCENT_ADD_VALUE",
    49: "PHYSICS_HURT_REDUCE_ADD_PERCENT",
    50: "MAGIC_HURT_REDUCE_ADD_PERCENT",
    51: "HURT_REDUCE_ADD_PERCENT",
    52: "HURT_RANDOM_PERCENT_ADD",
    53: "CURE_PERCENT_ADD",
    54: "MAX_ENERGY_ADD_VALUE",
    55: "MAX_ENERGY_ADD_SECOND_VALUE",
    56: "MAX_ENERGY_ADD_PERCENT",
    57: "ENERGY_INCREMENT_ADD_VALUE",
    58: "ENERGY_INCREMENT_ADD_SECOND_VALUE",
    59: "ENERGY_INCREMENT_ADD_PERCENT",
    60: "SERVER_END",
  }

  _NAMES_TO_VALUES = {
    "SERVER_BEGIN": 0,
    "MAX_HP_ADD_VALUE": 0,
    "MAX_HP_ADD_SECOND_VALUE": 1,
    "MAX_HP_ADD_PERCENT": 2,
    "MAX_MP_ADD_VALUE": 3,
    "MAX_MP_ADD_SECOND_VALUE": 4,
    "MAX_MP_ADD_PERCENT": 5,
    "MOVE_SPEED_ADD_VALUE": 6,
    "MOVE_SPEED_ADD_SECOND_VALUE": 7,
    "MOVE_SPEED_ADD_PERCENT": 8,
    "PHYSIQUE_ADD_VALUE": 9,
    "PHYSIQUE_ADD_SECOND_VALUE": 10,
    "PHYSIQUE_ADD_PERCENT": 11,
    "STRENGTH_ADD_VALUE": 12,
    "STRENGTH_ADD_SECOND_VALUE": 13,
    "STRENGTH_ADD_PERCENT": 14,
    "INTELLIGENCE_ADD_VALUE": 15,
    "INTELLIGENCE_ADD_SECOND_VALUE": 16,
    "INTELLIGENCE_ADD_PERCENT": 17,
    "AGILE_ADD_VALUE": 18,
    "AGILE_ADD_SECOND_VALUE": 19,
    "AGILE_ADD_PERCENT": 20,
    "SPIRIT_ADD_VALUE": 21,
    "SPIRIT_ADD_SECOND_VALUE": 22,
    "SPIRIT_ADD_PERCENT": 23,
    "PHYSICS_ATTACK_ADD_VALUE": 24,
    "PHYSICS_ATTACK_ADD_SECOND_VALUE": 25,
    "PHYSICS_ATTACK_ADD_PERCENT": 26,
    "PHYSICS_DEFENCE_ADD_VALUE": 27,
    "PHYSICS_DEFENCE_ADD_SECOND_VALUE": 28,
    "PHYSICS_DEFENCE_ADD_PERCENT": 29,
    "MAGIC_ATTACK_ADD_VALUE": 30,
    "MAGIC_ATTACK_ADD_SECOND_VALUE": 31,
    "MAGIC_ATTACK_ADD_PERCENT": 32,
    "MAGIC_DEFENCE_ADD_VALUE": 33,
    "MAGIC_DEFENCE_ADD_SECOND_VALUE": 34,
    "MAGIC_DEFENCE_ADD_PERCENT": 35,
    "DODGE_ADD_VALUE": 36,
    "DODGE_ADD_SECOND_VALUE": 37,
    "DODGE_ADD_PERCENT": 38,
    "DODGE_PERCENT_ADD_VALUE": 39,
    "CRIT_ADD_VALUE": 40,
    "CRIT_ADD_SECOND_VALUE": 41,
    "CRIT_ADD_PERCENT": 42,
    "CRIT_PERCENT_ADD_VALUE": 43,
    "CRIT_EFFECT_PERCENT_ADD_VALUE": 44,
    "IGNORE_DEFENCE_ADD_VALUE": 45,
    "IGNORE_DEFENCE_ADD_SECOND_VALUE": 46,
    "IGNORE_DEFENCE_ADD_PERCENT": 47,
    "IGNORE_DEFENCE_PERCENT_ADD_VALUE": 48,
    "PHYSICS_HURT_REDUCE_ADD_PERCENT": 49,
    "MAGIC_HURT_REDUCE_ADD_PERCENT": 50,
    "HURT_REDUCE_ADD_PERCENT": 51,
    "HURT_RANDOM_PERCENT_ADD": 52,
    "CURE_PERCENT_ADD": 53,
    "MAX_ENERGY_ADD_VALUE": 54,
    "MAX_ENERGY_ADD_SECOND_VALUE": 55,
    "MAX_ENERGY_ADD_PERCENT": 56,
    "ENERGY_INCREMENT_ADD_VALUE": 57,
    "ENERGY_INCREMENT_ADD_SECOND_VALUE": 58,
    "ENERGY_INCREMENT_ADD_PERCENT": 59,
    "SERVER_END": 60,
  }

class RoleBasicStatus:
  STATUS_MIN = 0
  STATUS_COMMON = 0
  STATUS_DIE = 1
  STATUS_ZAZEN = 2
  STATUS_MAX = 3

  _VALUES_TO_NAMES = {
    0: "STATUS_MIN",
    0: "STATUS_COMMON",
    1: "STATUS_DIE",
    2: "STATUS_ZAZEN",
    3: "STATUS_MAX",
  }

  _NAMES_TO_VALUES = {
    "STATUS_MIN": 0,
    "STATUS_COMMON": 0,
    "STATUS_DIE": 1,
    "STATUS_ZAZEN": 2,
    "STATUS_MAX": 3,
  }

class RoleCommonStatus:
  SOUL = 1
  FORBID_MOVE = 2
  FORBID_USE_SKILL = 4
  FORBID_USE_ITEM = 8
  FORBID_BEATEN_MAP = 16

  _VALUES_TO_NAMES = {
    1: "SOUL",
    2: "FORBID_MOVE",
    4: "FORBID_USE_SKILL",
    8: "FORBID_USE_ITEM",
    16: "FORBID_BEATEN_MAP",
  }

  _NAMES_TO_VALUES = {
    "SOUL": 1,
    "FORBID_MOVE": 2,
    "FORBID_USE_SKILL": 4,
    "FORBID_USE_ITEM": 8,
    "FORBID_BEATEN_MAP": 16,
  }

class RoleAfterDieStatus:
  NORMAL = 0
  PROTECT = 1

  _VALUES_TO_NAMES = {
    0: "NORMAL",
    1: "PROTECT",
  }

  _NAMES_TO_VALUES = {
    "NORMAL": 0,
    "PROTECT": 1,
  }


class RoleAoiField:
  """
  Attributes:
   - field_
   - value_
  """

  thrift_spec = (
    None, # 0
    (1, TType.I32, 'field_', None, None, ), # 1
    (2, TType.I32, 'value_', None, None, ), # 2
  )

  def __init__(self, field_=None, value_=None,):
    self.field_ = field_
    self.value_ = value_

  def read(self, iprot):
    if iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and isinstance(iprot.trans, TTransport.CReadableTransport) and self.thrift_spec is not None and fastbinary is not None:
      fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
      return
    iprot.readStructBegin()
    while True:
      (fname, ftype, fid) = iprot.readFieldBegin()
      if ftype == TType.STOP:
        break
      if fid == 1:
        if ftype == TType.I32:
          self.field_ = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 2:
        if ftype == TType.I32:
          self.value_ = iprot.readI32();
        else:
          iprot.skip(ftype)
      else:
        iprot.skip(ftype)
      iprot.readFieldEnd()
    iprot.readStructEnd()

  def write(self, oprot):
    if oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and self.thrift_spec is not None and fastbinary is not None:
      oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
      return
    oprot.writeStructBegin('RoleAoiField')
    if self.field_ is not None:
      oprot.writeFieldBegin('field_', TType.I32, 1)
      oprot.writeI32(self.field_)
      oprot.writeFieldEnd()
    if self.value_ is not None:
      oprot.writeFieldBegin('value_', TType.I32, 2)
      oprot.writeI32(self.value_)
      oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

  def validate(self):
    if self.field_ is None:
      raise TProtocol.TProtocolException(message='Required field field_ is unset!')
    if self.value_ is None:
      raise TProtocol.TProtocolException(message='Required field value_ is unset!')
    return


  def __repr__(self):
    L = ['%s=%r' % (key, value)
      for key, value in self.__dict__.iteritems()]
    return '%s(%s)' % (self.__class__.__name__, ', '.join(L))

  def __eq__(self, other):
    return isinstance(other, self.__class__) and self.__dict__ == other.__dict__

  def __ne__(self, other):
    return not (self == other)

class RoleClientField:
  """
  Attributes:
   - field_
   - value_
  """

  thrift_spec = (
    None, # 0
    (1, TType.I32, 'field_', None, None, ), # 1
    (2, TType.I32, 'value_', None, None, ), # 2
  )

  def __init__(self, field_=None, value_=None,):
    self.field_ = field_
    self.value_ = value_

  def read(self, iprot):
    if iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and isinstance(iprot.trans, TTransport.CReadableTransport) and self.thrift_spec is not None and fastbinary is not None:
      fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
      return
    iprot.readStructBegin()
    while True:
      (fname, ftype, fid) = iprot.readFieldBegin()
      if ftype == TType.STOP:
        break
      if fid == 1:
        if ftype == TType.I32:
          self.field_ = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 2:
        if ftype == TType.I32:
          self.value_ = iprot.readI32();
        else:
          iprot.skip(ftype)
      else:
        iprot.skip(ftype)
      iprot.readFieldEnd()
    iprot.readStructEnd()

  def write(self, oprot):
    if oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and self.thrift_spec is not None and fastbinary is not None:
      oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
      return
    oprot.writeStructBegin('RoleClientField')
    if self.field_ is not None:
      oprot.writeFieldBegin('field_', TType.I32, 1)
      oprot.writeI32(self.field_)
      oprot.writeFieldEnd()
    if self.value_ is not None:
      oprot.writeFieldBegin('value_', TType.I32, 2)
      oprot.writeI32(self.value_)
      oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

  def validate(self):
    if self.field_ is None:
      raise TProtocol.TProtocolException(message='Required field field_ is unset!')
    if self.value_ is None:
      raise TProtocol.TProtocolException(message='Required field value_ is unset!')
    return


  def __repr__(self):
    L = ['%s=%r' % (key, value)
      for key, value in self.__dict__.iteritems()]
    return '%s(%s)' % (self.__class__.__name__, ', '.join(L))

  def __eq__(self, other):
    return isinstance(other, self.__class__) and self.__dict__ == other.__dict__

  def __ne__(self, other):
    return not (self == other)
